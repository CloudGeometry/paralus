---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: rafay-system

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rafay-kube-proxy-audit
  namespace: rafay-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rafay-kube-proxy
  name: rafay-kube-proxy
  namespace: rafay-system
spec:
  replicas: 1
  progressDeadlineSeconds: 1800
  selector:
    matchLabels:
      app: rafay-kube-proxy
  template:
    metadata:
      labels:
        app: rafay-kube-proxy
    spec:
      containers:
      - args:
        - --mode=server
        - --log-level=3
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PARALUS_RELAY_PEERSERVICE
          valueFrom:
            configMapKeyRef:
              key: sentry.peering.host
              name: rafay-kube-proxy-config
        - name: SENTRY_ADDR
          valueFrom:
            configMapKeyRef:
              key: sentry.addr
              name: rafay-kube-proxy-config
        - name: BOOTSTRAP_ADDR
          valueFrom:
            configMapKeyRef:
              key: sentry.addr
              name: rafay-kube-proxy-config
        - name: RELAY_PEERING_TOKEN
          valueFrom:
            configMapKeyRef:
              key: peer.token
              name: rafay-kube-proxy-config
        - name: RELAY_USER_TOKEN
          valueFrom:
            configMapKeyRef:
              key: user.token
              name: rafay-kube-proxy-config
        - name: RELAY_USER_HOST_PORT
          valueFrom:
            configMapKeyRef:
              key: user.host.port
              name: rafay-kube-proxy-config
        - name: RELAY_CONNECTOR_TOKEN
          valueFrom:
            configMapKeyRef:
              key: connector.token
              name: rafay-kube-proxy-config
        - name: RELAY_CONNECTOR_HOST_PORT
          valueFrom:
            configMapKeyRef:
              key: connector.host.port
              name: rafay-kube-proxy-config
        - name: RELAY_NETWORK_ID
          valueFrom:
            configMapKeyRef:
              key: relaynetwork.id
              name: rafay-kube-proxy-config
              
        - name: AUDIT_PATH
          valueFrom:
            configMapKeyRef:
              key: audit.path
              name: rafay-kube-proxy-config
        image: "{{ .DownloadData.RelayImage }}"
        imagePullPolicy: IfNotPresent
        name: rafay-kube-proxy
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/rafay/audit
          name: audit
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: audit
        persistentVolumeClaim:
          claimName: rafay-kube-proxy-audit

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rafay-kube-proxy-config
  namespace: rafay-system
data:
  audit.path: "/opt/rafay/audit"
  sentry.addr: "{{ .DownloadData.SentryAddr }}"
  sentry.peering.host: "{{ .DownloadData.PeerHost }}"
  peer.token: "{{ .DownloadData.PeerToken }}"
  user.token: "{{ .DownloadData.UserToken }}"
  connector.token: "{{ .DownloadData.ConnectorToken }}"
  connector.host.port: "{{ .DownloadData.RelayHostPort }}"
  user.host.port: "{{ .DownloadData.UserHostPort }}"
  relaynetwork.id: "{{ .DownloadData.RelayNetworkID }}"

---
apiVersion: v1
kind: Service
metadata:
  name: rafay-kube-proxy
  namespace: rafay-system
spec:
  ports:
  - name: tcp-relay
    port: 443
    protocol: TCP
    targetPort: 443
  - name: http-relay-monitoring
    port: 8003
    protocol: TCP
    targetPort: 8003
  selector:
    app: rafay-kube-proxy

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: rafay-kube-proxy-tail
  name: rafay-kube-proxy-tail
  namespace: rafay-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: rafay-kube-proxy-tail
  template:
    metadata:
      labels:
        app: rafay-kube-proxy-tail
    spec:
      containers:
      - args:
        - --mode=tail
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PARALUS_RELAY_PEERSERVICE
          valueFrom:
            configMapKeyRef:
              key: sentry.peering.host
              name: rafay-kube-proxy-config
        - name: SENTRY_ADDR
          valueFrom:
            configMapKeyRef:
              key: sentry.addr
              name: rafay-kube-proxy-config
        - name: BOOTSTRAP_ADDR
          valueFrom:
            configMapKeyRef:
              key: sentry.addr
              name: rafay-kube-proxy-config
        - name: RELAY_PEERING_TOKEN
          valueFrom:
            configMapKeyRef:
              key: peer.token
              name: rafay-kube-proxy-config
        - name: AUDIT_PATH
          valueFrom:
            configMapKeyRef:
              key: audit.path
              name: rafay-kube-proxy-config
        image: "{{ .DownloadData.RelayImage }}"
        imagePullPolicy: IfNotPresent
        name: rafay-kube-proxy-tail
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/rafay/audit
          name: audit
      volumes:
      - name: audit
        persistentVolumeClaim:
          claimName: rafay-kube-proxy-audit
