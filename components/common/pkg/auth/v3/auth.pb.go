// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: pkg/auth/v3/auth.proto

package authv3

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthType int32

const (
	AuthType_AuthTypeNotSet AuthType = 0
	AuthType_SessionLogin   AuthType = 1
	AuthType_APIKey         AuthType = 2
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "AuthTypeNotSet",
		1: "SessionLogin",
		2: "APIKey",
	}
	AuthType_value = map[string]int32{
		"AuthTypeNotSet": 0,
		"SessionLogin":   1,
		"APIKey":         2,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_auth_v3_auth_proto_enumTypes[0].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_pkg_auth_v3_auth_proto_enumTypes[0]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{0}
}

type ClientType int32

const (
	ClientType_ClientTypeNotSet ClientType = 0
	ClientType_BROWSER          ClientType = 1
	ClientType_CLI              ClientType = 2
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "ClientTypeNotSet",
		1: "BROWSER",
		2: "CLI",
	}
	ClientType_value = map[string]int32{
		"ClientTypeNotSet": 0,
		"BROWSER":          1,
		"CLI":              2,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_auth_v3_auth_proto_enumTypes[1].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_pkg_auth_v3_auth_proto_enumTypes[1]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{1}
}

type SessionStatus int32

const (
	SessionStatus_SessionNotFound SessionStatus = 0
	SessionStatus_SessionExists   SessionStatus = 1
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SessionNotFound",
		1: "SessionExists",
	}
	SessionStatus_value = map[string]int32{
		"SessionNotFound": 0,
		"SessionExists":   1,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_auth_v3_auth_proto_enumTypes[2].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_pkg_auth_v3_auth_proto_enumTypes[2]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{2}
}

type APIKeyStatus int32

const (
	APIKeyStatus_APIKeyNotFound APIKeyStatus = 0
	APIKeyStatus_APIKeyExists   APIKeyStatus = 1
)

// Enum value maps for APIKeyStatus.
var (
	APIKeyStatus_name = map[int32]string{
		0: "APIKeyNotFound",
		1: "APIKeyExists",
	}
	APIKeyStatus_value = map[string]int32{
		"APIKeyNotFound": 0,
		"APIKeyExists":   1,
	}
)

func (x APIKeyStatus) Enum() *APIKeyStatus {
	p := new(APIKeyStatus)
	*p = x
	return p
}

func (x APIKeyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APIKeyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_auth_v3_auth_proto_enumTypes[3].Descriptor()
}

func (APIKeyStatus) Type() protoreflect.EnumType {
	return &file_pkg_auth_v3_auth_proto_enumTypes[3]
}

func (x APIKeyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APIKeyStatus.Descriptor instead.
func (APIKeyStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{3}
}

type RequestStatus int32

const (
	RequestStatus_RequestAllowed               RequestStatus = 0
	RequestStatus_RequestNotAuthenticated      RequestStatus = 1
	RequestStatus_RequestMethodOrURLNotAllowed RequestStatus = 2
)

// Enum value maps for RequestStatus.
var (
	RequestStatus_name = map[int32]string{
		0: "RequestAllowed",
		1: "RequestNotAuthenticated",
		2: "RequestMethodOrURLNotAllowed",
	}
	RequestStatus_value = map[string]int32{
		"RequestAllowed":               0,
		"RequestNotAuthenticated":      1,
		"RequestMethodOrURLNotAllowed": 2,
	}
)

func (x RequestStatus) Enum() *RequestStatus {
	p := new(RequestStatus)
	*p = x
	return p
}

func (x RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_auth_v3_auth_proto_enumTypes[4].Descriptor()
}

func (RequestStatus) Type() protoreflect.EnumType {
	return &file_pkg_auth_v3_auth_proto_enumTypes[4]
}

func (x RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus.Descriptor instead.
func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{4}
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{0}
}

func (x *GetSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ResourceURLMethods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Methods []string `protobuf:"bytes,1,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *ResourceURLMethods) Reset() {
	*x = ResourceURLMethods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceURLMethods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceURLMethods) ProtoMessage() {}

func (x *ResourceURLMethods) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceURLMethods.ProtoReflect.Descriptor instead.
func (*ResourceURLMethods) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceURLMethods) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

type NamespaceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NamespaceId string `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Role        string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *NamespaceData) Reset() {
	*x = NamespaceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceData) ProtoMessage() {}

func (x *NamespaceData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceData.ProtoReflect.Descriptor instead.
func (*NamespaceData) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceData) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *NamespaceData) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *NamespaceData) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ProjectRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Role      string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ProjectRole) Reset() {
	*x = ProjectRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRole) ProtoMessage() {}

func (x *ProjectRole) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRole.ProtoReflect.Descriptor instead.
func (*ProjectRole) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectRole) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ProjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All  bool           `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	List []*ProjectRole `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProjectData) Reset() {
	*x = ProjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectData) ProtoMessage() {}

func (x *ProjectData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectData.ProtoReflect.Descriptor instead.
func (*ProjectData) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectData) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ProjectData) GetList() []*ProjectRole {
	if x != nil {
		return x.List
	}
	return nil
}

type SessionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account            string                         `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Organization       string                         `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Partner            string                         `protobuf:"bytes,3,opt,name=partner,proto3" json:"partner,omitempty"`
	Role               string                         `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Permissions        []string                       `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	PartnerDomain      string                         `protobuf:"bytes,6,opt,name=partner_domain,json=partnerDomain,proto3" json:"partner_domain,omitempty"`
	Username           string                         `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	IsSuperAdmin       bool                           `protobuf:"varint,8,opt,name=is_super_admin,json=isSuperAdmin,proto3" json:"is_super_admin,omitempty"`
	IsPartnerAdmin     bool                           `protobuf:"varint,9,opt,name=is_partner_admin,json=isPartnerAdmin,proto3" json:"is_partner_admin,omitempty"`
	IsSsoUser          bool                           `protobuf:"varint,10,opt,name=is_sso_user,json=isSsoUser,proto3" json:"is_sso_user,omitempty"`
	ResourceUrls       map[string]*ResourceURLMethods `protobuf:"bytes,11,rep,name=resource_urls,json=resourceUrls,proto3" json:"resource_urls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ttl                string                         `protobuf:"bytes,12,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Groups             []string                       `protobuf:"bytes,13,rep,name=groups,proto3" json:"groups,omitempty"`
	AuthType           AuthType                       `protobuf:"varint,14,opt,name=auth_type,json=authType,proto3,enum=rafay.dev.auth.v3.AuthType" json:"auth_type,omitempty"`
	Idp                string                         `protobuf:"bytes,15,opt,name=idp,proto3" json:"idp,omitempty"`
	IsOrgAdmin         map[string]bool                `protobuf:"bytes,16,rep,name=is_org_admin,json=isOrgAdmin,proto3" json:"is_org_admin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ClientType         ClientType                     `protobuf:"varint,17,opt,name=client_type,json=clientType,proto3,enum=rafay.dev.auth.v3.ClientType" json:"client_type,omitempty"`
	IsAllNsAccess      map[string]bool                `protobuf:"bytes,18,rep,name=is_all_ns_access,json=isAllNsAccess,proto3" json:"is_all_ns_access,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Namespaces         []*NamespaceData               `protobuf:"bytes,19,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Project            *ProjectData                   `protobuf:"bytes,20,opt,name=project,proto3" json:"project,omitempty"`
	IsReadonlyOrgAdmin map[string]bool                `protobuf:"bytes,21,rep,name=is_readonly_org_admin,json=isReadonlyOrgAdmin,proto3" json:"is_readonly_org_admin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SessionData) Reset() {
	*x = SessionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionData) ProtoMessage() {}

func (x *SessionData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionData.ProtoReflect.Descriptor instead.
func (*SessionData) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{5}
}

func (x *SessionData) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SessionData) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *SessionData) GetPartner() string {
	if x != nil {
		return x.Partner
	}
	return ""
}

func (x *SessionData) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SessionData) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *SessionData) GetPartnerDomain() string {
	if x != nil {
		return x.PartnerDomain
	}
	return ""
}

func (x *SessionData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SessionData) GetIsSuperAdmin() bool {
	if x != nil {
		return x.IsSuperAdmin
	}
	return false
}

func (x *SessionData) GetIsPartnerAdmin() bool {
	if x != nil {
		return x.IsPartnerAdmin
	}
	return false
}

func (x *SessionData) GetIsSsoUser() bool {
	if x != nil {
		return x.IsSsoUser
	}
	return false
}

func (x *SessionData) GetResourceUrls() map[string]*ResourceURLMethods {
	if x != nil {
		return x.ResourceUrls
	}
	return nil
}

func (x *SessionData) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

func (x *SessionData) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SessionData) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_AuthTypeNotSet
}

func (x *SessionData) GetIdp() string {
	if x != nil {
		return x.Idp
	}
	return ""
}

func (x *SessionData) GetIsOrgAdmin() map[string]bool {
	if x != nil {
		return x.IsOrgAdmin
	}
	return nil
}

func (x *SessionData) GetClientType() ClientType {
	if x != nil {
		return x.ClientType
	}
	return ClientType_ClientTypeNotSet
}

func (x *SessionData) GetIsAllNsAccess() map[string]bool {
	if x != nil {
		return x.IsAllNsAccess
	}
	return nil
}

func (x *SessionData) GetNamespaces() []*NamespaceData {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *SessionData) GetProject() *ProjectData {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *SessionData) GetIsReadonlyOrgAdmin() map[string]bool {
	if x != nil {
		return x.IsReadonlyOrgAdmin
	}
	return nil
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SessionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rafay.dev.auth.v3.SessionStatus" json:"status,omitempty"`
	Reason string        `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Data   *SessionData  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{6}
}

func (x *GetSessionResponse) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_SessionNotFound
}

func (x *GetSessionResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetSessionResponse) GetData() *SessionData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *GetAPIKeyRequest) Reset() {
	*x = GetAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyRequest) ProtoMessage() {}

func (x *GetAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{7}
}

func (x *GetAPIKeyRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type GetAPIKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status APIKeyStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rafay.dev.auth.v3.APIKeyStatus" json:"status,omitempty"`
	Reason string       `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Secret string       `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	Data   *SessionData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAPIKeyResponse) Reset() {
	*x = GetAPIKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyResponse) ProtoMessage() {}

func (x *GetAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{8}
}

func (x *GetAPIKeyResponse) GetStatus() APIKeyStatus {
	if x != nil {
		return x.Status
	}
	return APIKeyStatus_APIKeyNotFound
}

func (x *GetAPIKeyResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetAPIKeyResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *GetAPIKeyResponse) GetData() *SessionData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IsRequestAllowedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Rsid   string `protobuf:"bytes,3,opt,name=rsid,proto3" json:"rsid,omitempty"`
	ApiKey string `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *IsRequestAllowedRequest) Reset() {
	*x = IsRequestAllowedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRequestAllowedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRequestAllowedRequest) ProtoMessage() {}

func (x *IsRequestAllowedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRequestAllowedRequest.ProtoReflect.Descriptor instead.
func (*IsRequestAllowedRequest) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{9}
}

func (x *IsRequestAllowedRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *IsRequestAllowedRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *IsRequestAllowedRequest) GetRsid() string {
	if x != nil {
		return x.Rsid
	}
	return ""
}

func (x *IsRequestAllowedRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type IsRequestAllowedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      RequestStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rafay.dev.auth.v3.RequestStatus" json:"status,omitempty"`
	Reason      string        `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	SessionData *SessionData  `protobuf:"bytes,3,opt,name=sessionData,proto3" json:"sessionData,omitempty"`
}

func (x *IsRequestAllowedResponse) Reset() {
	*x = IsRequestAllowedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRequestAllowedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRequestAllowedResponse) ProtoMessage() {}

func (x *IsRequestAllowedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRequestAllowedResponse.ProtoReflect.Descriptor instead.
func (*IsRequestAllowedResponse) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{10}
}

func (x *IsRequestAllowedResponse) GetStatus() RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatus_RequestAllowed
}

func (x *IsRequestAllowedResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *IsRequestAllowedResponse) GetSessionData() *SessionData {
	if x != nil {
		return x.SessionData
	}
	return nil
}

type AuthErrorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode string `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Detail    string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Info      string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *AuthErrorDetail) Reset() {
	*x = AuthErrorDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthErrorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthErrorDetail) ProtoMessage() {}

func (x *AuthErrorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthErrorDetail.ProtoReflect.Descriptor instead.
func (*AuthErrorDetail) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{11}
}

func (x *AuthErrorDetail) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *AuthErrorDetail) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *AuthErrorDetail) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type AuthError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32              `protobuf:"zigzag32,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Details    []*AuthErrorDetail `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *AuthError) Reset() {
	*x = AuthError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_auth_v3_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthError) ProtoMessage() {}

func (x *AuthError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_auth_v3_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthError.ProtoReflect.Descriptor instead.
func (*AuthError) Descriptor() ([]byte, []int) {
	return file_pkg_auth_v3_auth_proto_rawDescGZIP(), []int{12}
}

func (x *AuthError) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *AuthError) GetDetails() []*AuthErrorDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_pkg_auth_v3_auth_proto protoreflect.FileDescriptor

var file_pkg_auth_v3_auth_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x52, 0x4c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x59,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12,
	0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x33, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x0a, 0x0a, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x73, 0x73, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x73, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6f, 0x72,
	0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x33, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x73,
	0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x69,
	0x73, 0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x33, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x4e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x4e, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x66, 0x61,
	0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x69, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6f, 0x72, 0x67, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c,
	0x79, 0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12,
	0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x1a, 0x66, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x49, 0x73,
	0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x49, 0x73, 0x41,
	0x6c, 0x6c, 0x4e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x49,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x4f, 0x72, 0x67, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x72, 0x61, 0x66, 0x61,
	0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x66, 0x61,
	0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0xb0, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x66, 0x61,
	0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x70, 0x0a, 0x17, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x73, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x40, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x5c, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x6a, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3c,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2a, 0x42, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x10, 0x02, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00,
	0x2a, 0x3e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x53,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x49, 0x10, 0x02, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00,
	0x2a, 0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x01, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x2a,
	0x3a, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x10, 0x01, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x2a, 0x68, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x72,
	0x55, 0x52, 0x4c, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x02, 0x1a,
	0x04, 0x88, 0xa3, 0x1e, 0x00, 0x32, 0xa6, 0x02, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x6b,
	0x0a, 0x10, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x12, 0x2a, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x76, 0x33, 0x2e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x72, 0x61, 0x66, 0x61,
	0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xd3,
	0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33, 0x42, 0x09, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x52, 0x61, 0x66, 0x61, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x72,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x76, 0x33, 0xa2,
	0x02, 0x03, 0x52, 0x44, 0x41, 0xaa, 0x02, 0x11, 0x52, 0x61, 0x66, 0x61, 0x79, 0x2e, 0x44, 0x65,
	0x76, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x56, 0x33, 0xca, 0x02, 0x11, 0x52, 0x61, 0x66, 0x61,
	0x79, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56, 0x33, 0xe2, 0x02, 0x1d,
	0x52, 0x61, 0x66, 0x61, 0x79, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x5c, 0x56,
	0x33, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14,
	0x52, 0x61, 0x66, 0x61, 0x79, 0x3a, 0x3a, 0x44, 0x65, 0x76, 0x3a, 0x3a, 0x41, 0x75, 0x74, 0x68,
	0x3a, 0x3a, 0x56, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_auth_v3_auth_proto_rawDescOnce sync.Once
	file_pkg_auth_v3_auth_proto_rawDescData = file_pkg_auth_v3_auth_proto_rawDesc
)

func file_pkg_auth_v3_auth_proto_rawDescGZIP() []byte {
	file_pkg_auth_v3_auth_proto_rawDescOnce.Do(func() {
		file_pkg_auth_v3_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_auth_v3_auth_proto_rawDescData)
	})
	return file_pkg_auth_v3_auth_proto_rawDescData
}

var file_pkg_auth_v3_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pkg_auth_v3_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_auth_v3_auth_proto_goTypes = []interface{}{
	(AuthType)(0),                    // 0: rafay.dev.auth.v3.AuthType
	(ClientType)(0),                  // 1: rafay.dev.auth.v3.ClientType
	(SessionStatus)(0),               // 2: rafay.dev.auth.v3.SessionStatus
	(APIKeyStatus)(0),                // 3: rafay.dev.auth.v3.APIKeyStatus
	(RequestStatus)(0),               // 4: rafay.dev.auth.v3.RequestStatus
	(*GetSessionRequest)(nil),        // 5: rafay.dev.auth.v3.GetSessionRequest
	(*ResourceURLMethods)(nil),       // 6: rafay.dev.auth.v3.ResourceURLMethods
	(*NamespaceData)(nil),            // 7: rafay.dev.auth.v3.NamespaceData
	(*ProjectRole)(nil),              // 8: rafay.dev.auth.v3.ProjectRole
	(*ProjectData)(nil),              // 9: rafay.dev.auth.v3.ProjectData
	(*SessionData)(nil),              // 10: rafay.dev.auth.v3.SessionData
	(*GetSessionResponse)(nil),       // 11: rafay.dev.auth.v3.GetSessionResponse
	(*GetAPIKeyRequest)(nil),         // 12: rafay.dev.auth.v3.GetAPIKeyRequest
	(*GetAPIKeyResponse)(nil),        // 13: rafay.dev.auth.v3.GetAPIKeyResponse
	(*IsRequestAllowedRequest)(nil),  // 14: rafay.dev.auth.v3.IsRequestAllowedRequest
	(*IsRequestAllowedResponse)(nil), // 15: rafay.dev.auth.v3.IsRequestAllowedResponse
	(*AuthErrorDetail)(nil),          // 16: rafay.dev.auth.v3.AuthErrorDetail
	(*AuthError)(nil),                // 17: rafay.dev.auth.v3.AuthError
	nil,                              // 18: rafay.dev.auth.v3.SessionData.ResourceUrlsEntry
	nil,                              // 19: rafay.dev.auth.v3.SessionData.IsOrgAdminEntry
	nil,                              // 20: rafay.dev.auth.v3.SessionData.IsAllNsAccessEntry
	nil,                              // 21: rafay.dev.auth.v3.SessionData.IsReadonlyOrgAdminEntry
}
var file_pkg_auth_v3_auth_proto_depIdxs = []int32{
	8,  // 0: rafay.dev.auth.v3.ProjectData.list:type_name -> rafay.dev.auth.v3.ProjectRole
	18, // 1: rafay.dev.auth.v3.SessionData.resource_urls:type_name -> rafay.dev.auth.v3.SessionData.ResourceUrlsEntry
	0,  // 2: rafay.dev.auth.v3.SessionData.auth_type:type_name -> rafay.dev.auth.v3.AuthType
	19, // 3: rafay.dev.auth.v3.SessionData.is_org_admin:type_name -> rafay.dev.auth.v3.SessionData.IsOrgAdminEntry
	1,  // 4: rafay.dev.auth.v3.SessionData.client_type:type_name -> rafay.dev.auth.v3.ClientType
	20, // 5: rafay.dev.auth.v3.SessionData.is_all_ns_access:type_name -> rafay.dev.auth.v3.SessionData.IsAllNsAccessEntry
	7,  // 6: rafay.dev.auth.v3.SessionData.namespaces:type_name -> rafay.dev.auth.v3.NamespaceData
	9,  // 7: rafay.dev.auth.v3.SessionData.project:type_name -> rafay.dev.auth.v3.ProjectData
	21, // 8: rafay.dev.auth.v3.SessionData.is_readonly_org_admin:type_name -> rafay.dev.auth.v3.SessionData.IsReadonlyOrgAdminEntry
	2,  // 9: rafay.dev.auth.v3.GetSessionResponse.status:type_name -> rafay.dev.auth.v3.SessionStatus
	10, // 10: rafay.dev.auth.v3.GetSessionResponse.data:type_name -> rafay.dev.auth.v3.SessionData
	3,  // 11: rafay.dev.auth.v3.GetAPIKeyResponse.status:type_name -> rafay.dev.auth.v3.APIKeyStatus
	10, // 12: rafay.dev.auth.v3.GetAPIKeyResponse.data:type_name -> rafay.dev.auth.v3.SessionData
	4,  // 13: rafay.dev.auth.v3.IsRequestAllowedResponse.status:type_name -> rafay.dev.auth.v3.RequestStatus
	10, // 14: rafay.dev.auth.v3.IsRequestAllowedResponse.sessionData:type_name -> rafay.dev.auth.v3.SessionData
	16, // 15: rafay.dev.auth.v3.AuthError.details:type_name -> rafay.dev.auth.v3.AuthErrorDetail
	6,  // 16: rafay.dev.auth.v3.SessionData.ResourceUrlsEntry.value:type_name -> rafay.dev.auth.v3.ResourceURLMethods
	14, // 17: rafay.dev.auth.v3.Auth.IsRequestAllowed:input_type -> rafay.dev.auth.v3.IsRequestAllowedRequest
	5,  // 18: rafay.dev.auth.v3.Auth.GetSession:input_type -> rafay.dev.auth.v3.GetSessionRequest
	12, // 19: rafay.dev.auth.v3.Auth.GetAPIKey:input_type -> rafay.dev.auth.v3.GetAPIKeyRequest
	15, // 20: rafay.dev.auth.v3.Auth.IsRequestAllowed:output_type -> rafay.dev.auth.v3.IsRequestAllowedResponse
	11, // 21: rafay.dev.auth.v3.Auth.GetSession:output_type -> rafay.dev.auth.v3.GetSessionResponse
	13, // 22: rafay.dev.auth.v3.Auth.GetAPIKey:output_type -> rafay.dev.auth.v3.GetAPIKeyResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pkg_auth_v3_auth_proto_init() }
func file_pkg_auth_v3_auth_proto_init() {
	if File_pkg_auth_v3_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_auth_v3_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceURLMethods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRequestAllowedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRequestAllowedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthErrorDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_auth_v3_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_auth_v3_auth_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_auth_v3_auth_proto_goTypes,
		DependencyIndexes: file_pkg_auth_v3_auth_proto_depIdxs,
		EnumInfos:         file_pkg_auth_v3_auth_proto_enumTypes,
		MessageInfos:      file_pkg_auth_v3_auth_proto_msgTypes,
	}.Build()
	File_pkg_auth_v3_auth_proto = out.File
	file_pkg_auth_v3_auth_proto_rawDesc = nil
	file_pkg_auth_v3_auth_proto_goTypes = nil
	file_pkg_auth_v3_auth_proto_depIdxs = nil
}
