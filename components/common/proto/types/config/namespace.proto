syntax = "proto3";
package rafay.dev.types.config;

import "protoc-gen-openapiv2/options/annotations.proto";
import "gogoproto/gogo.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "proto/types/commonpb/v3/common.proto";
import "proto/types/config/config.proto";
import "proto/types/config/placement.proto";
import "proto/types/config/workload.proto";
import "proto/types/controller/cluster_controller.proto";

message NamespaceStatus {
  string generatedName = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      read_only : true
    },
    (gogoproto.moretags) = "pg:\"generated_name,use_zero\""
  ];
  bool publishPending = 2 [
    (gogoproto.moretags) = "pg:\"publish_pending,use_zero\"",
    (gogoproto.jsontag) = "publishPending"
  ];
  sint64 lastPublishedRevision = 3
      [ (gogoproto.moretags) = "pg:\"last_published_revision,use_zero\"" ];
  repeated rafay.dev.types.config.ClusterMeta assignedClusters = 4 [
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
        "pg:\"assigned_clusters,use_zero\"",
    (gogoproto.nullable) = false
  ];
  repeated rafay.dev.types.config.ClusterMeta deployedClusters = 5 [
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
        "pg:\"deployed_clusters,use_zero\"",
    (gogoproto.nullable) = false
  ];
  repeated rafay.dev.types.config.ClusterMeta failedClusters = 6 [
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
        "pg:\"failed_clusters,use_zero\"",
    (gogoproto.nullable) = false
  ];
  repeated rafay.dev.types.config.ClusterMeta readyClusters = 7 [
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
        "pg:\"ready_clusters,use_zero\"",
    (gogoproto.nullable) = false
  ];
  repeated rafay.dev.types.config.ClusterMeta driftedClusters = 8 [
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
        "pg:\"drifted_clusters,use_zero\"",
    (gogoproto.nullable) = false
  ];
  repeated rafay.dev.types.config.WorkloadSnapshotCondition conditions = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) =
        "patchStrategy:\"merge\" patchMergeKey:\"type\" pg:\"conditions\"",
    (gogoproto.jsontag) = "conditions,omitempty"
  ];
  bool isDirty = 10 [
    (gogoproto.moretags) = "pg:\"is_dirty,use_zero\"",
    (gogoproto.jsontag) = "isDirty"
  ];
}

message LimitRangeItem {
    float maxCpu = 1 [ (gogoproto.jsontag) = "maxCpu,omitempty" ];
    float maxMemory = 2 [ (gogoproto.jsontag) = "maxMemory,omitempty" ];
    float minCpu = 3 [ (gogoproto.jsontag) = "minCpu,omitempty" ];
    float minMemory = 4 [ (gogoproto.jsontag) = "minMemory,omitempty" ];
    float defaultCpu = 5 [ (gogoproto.jsontag) = "defaultCpu,omitempty" ];
    float defaultMemory = 6 [ (gogoproto.jsontag) = "defaultMemory,omitempty" ];
    float defaultRequestCpu = 7
        [ (gogoproto.jsontag) = "defaultRequestCpu,omitempty" ];
    float defaultRequestMemory = 8
        [ (gogoproto.jsontag) = "defaultRequestMemory,omitempty" ];
    float maxLimitRequestRatioCpu = 9
        [ (gogoproto.jsontag) = "maxLimitRequestRatioCpu,omitempty" ];
    float maxLimitRequestRatioMemory = 10
        [ (gogoproto.jsontag) = "maxLimitRequestRatioMemory,omitempty" ];
}

message LimitRange {
    LimitRangeItem podLimits = 1 [ (gogoproto.jsontag) = "podLimits,omitempty" ];
    LimitRangeItem containerLimits = 2
        [ (gogoproto.jsontag) = "containerLimits,omitempty" ];
}

message ResourceQuota {
    float cpuRequests = 1 [ (gogoproto.jsontag) = "cpuRequests,omitempty" ];
    float memoryRequests = 2 [ (gogoproto.jsontag) = "memoryRequests,omitempty" ];
    float cpuLimits = 3 [ (gogoproto.jsontag) = "cpuLimits,omitempty" ];
    float memoryLimits = 4 [ (gogoproto.jsontag) = "memoryLimits,omitempty" ];
}

// NamespaceStatusTemplate is the template for sending namespace status
message NamespaceStatusTemplate {
  k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta objectMeta = 1 [
    (gogoproto.embed) = true,
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "metadata,omitempty"
  ];
  rafay.dev.types.controller.NamespaceStatus status = 2
      [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
}

// NamespaceTemplate is the template for creating namespace
message NamespaceTemplate {
    k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta objectMeta = 1 [
      (gogoproto.embed) = true,
      (gogoproto.nullable) = false,
      (gogoproto.jsontag) = "metadata,omitempty"
    ];
    rafay.dev.types.controller.NamespaceSpec spec = 2
        [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
  
    ResourceQuota resourceQuota = 4 [
      (gogoproto.moretags) = "pg:\"-\"",
      (gogoproto.jsontag) = "resourceQuota,omitempty"
    ];
    LimitRange limitRange = 5 [
      (gogoproto.moretags) = "pg:\"-\"",
      (gogoproto.jsontag) = "limitRange,omitempty"
    ];
    rafay.dev.types.config.PlacementSpec placement = 6 [
      (gogoproto.moretags) = "pg:\"placement\"",
      (gogoproto.jsontag) = "placement,omitempty"
    ];
    string type = 7 [
      (gogoproto.moretags) = "pg:\"type\"",
      (gogoproto.jsontag) = "type,omitempty"
    ];
    string namespaceFromFile = 8 [
      (gogoproto.moretags) = "pg:\"-\"",
      (gogoproto.jsontag) = "namespaceFromFile,omitempty"
    ];
    string repoRef = 9 [
      (gogoproto.moretags) = "pg:\"repoRef\"",
      (gogoproto.jsontag) = "repoRef,omitempty"
    ];
    rafay.dev.types.config.RepoArtifactMeta repoArtifactMeta = 10 [
      (gogoproto.moretags) = "pg:\"repoArtifactMeta\"",
      (gogoproto.jsontag) = "repoArtifactMeta,omitempty"
    ];
    string namespaceFromRepo = 11 [
      (gogoproto.moretags) = "pg:\"-\"",
      (gogoproto.jsontag) = "namespaceFromRepo,omitempty"
    ];
}

// Namespace represets a kubernetes namespace along with all the objects
// whose lifecycle is tied to the kubernetes namespace lifecycle
message Namespace {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema : {
        title : "Namespace"
        description : "Namespace"
        required : [ "apiVersion", "kind", "metadata", "spec" ]
      }
    };
    string apiVersion = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "API Version",
            description : "API Version of the resource"
            default : "config.k8smgmt.io/v3"
            read_only : true
        } ];
        string kind = 2
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Kind",
            description : "Kind of the list resource"
            default : "ClusterOverrideList"
            read_only : true
        } ];
    rafay.dev.types.common.v3.Metadata metadata = 3
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Metadata",
            description : "Metadata of the resource"
        } ];
    NamespaceTemplate spec = 4
        [ (gogoproto.nullable) = false, (gogoproto.moretags) = "pg:\"spec\"" ];
    NamespaceStatus status = 5
        [ (gogoproto.nullable) = false ];
  }
  
  // NamespaceList is a list of namespaces
  message NamespaceList {
    string apiVersion = 1
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "API Version",
              description : "API Version of the list resource"
              default : "config.k8smgmt.io/v3"
              read_only : true
          } ];
    string kind = 2
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "Kind",
              description : "Kind of the list resource"
              default : "NamespaceList"
              read_only : true
          } ];
    rafay.dev.types.common.v3.ListMetadata metadata = 3
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "ListMetadata",
              description : "Metadata of the list resource"
              read_only : true
          } ];
    repeated Namespace items = 4;
  }