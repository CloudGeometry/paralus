syntax = "proto3";
package rafay.dev.types.config;

import "protoc-gen-openapiv2/options/annotations.proto";
import "gogoproto/gogo.proto";
import "proto/types/commonpb/v3/common.proto";

// Repository is a first class object for storing reference to git,helm, etc
// repo
message Repository {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
        title : "Repository"
        description : "Repository"
        required : [ "apiVersion", "kind", "metadata", "spec" ]
    }
    };
    string apiVersion = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "API Version",
            description : "API Version of the resource"
            default : "config.k8smgmt.io/v3"
            read_only : true
        } ];
    string kind = 2
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Kind",
            description : "Kind of the resource"
            default : "Repository"
            read_only : true
        } ];
    rafay.dev.types.common.v3.Metadata metadata = 3
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Metadata",
            description : "Metadata of the resource"
        } ];
  RepositorySpec spec = 4
      [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
  RepositoryStatus status = 5
      [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
}

enum RepositoryType {
  // disable enum prefix
  option (gogoproto.goproto_enum_prefix) = false;

  RepositoryTypeNotSet = 0;
  GitRepository = 1;
  HelmRepository = 2;
}

enum RepositoryCredentialType {
  // disable enum prefix
  option (gogoproto.goproto_enum_prefix) = false;

  CredentialTypeNotSet = 0;
  UserPassCredential = 1;
  SSHCredential = 2;
}

message AgentRef {
  string name = 1;
  string id = 2;
}

// RepositorySpec is the spec of SecretStore
message RepositorySpec {
  // helm, git etc
  RepositoryType repositoryType = 1 [
    (gogoproto.moretags) = "pg:\"repository_type,use_zero\"",
    (gogoproto.jsontag) = "repositoryType"
  ];
  // Https URL or SSH URL
  string endpoint = 2 [
    (gogoproto.moretags) = "pg:\"endpoint,use_zero\"",
    (gogoproto.jsontag) = "endpoint"
  ];

  bool insecure = 3 [
    (gogoproto.moretags) = "pg:\"insecure,use_zero\"",
    (gogoproto.jsontag) = "insecure"
  ];

  string caCert = 4 [ (gogoproto.moretags) = "pg:\"ca_cert,use_zero\"" ];

  RepoCredentials credentials = 5 [
    (gogoproto.moretags) = "pg:\"credentials,use_zero\"",
    (gogoproto.nullable) = false
  ];

  repeated string agentNames = 6 [
    (gogoproto.moretags) = "pg:\"agent_names,use_zero\"",
    (gogoproto.nullable) = false
  ];

  RepositoryCredentialType credentialType = 7 [
    (gogoproto.moretags) = "pg:\"credential_type,use_zero\"",
    (gogoproto.jsontag) = "credentialType"
  ];

  bool internalNetworkAccessOnly = 9 [
    (gogoproto.moretags) = "pg:\"internal_network_access_only,use_zero\"",
    (gogoproto.jsontag) = "internalNetworkAccessOnly"
  ];
  bool enableSubmodules = 10 [
    (gogoproto.moretags) = "pg:\"enable_submodles,use_zero\"",
    (gogoproto.jsontag) = "enableSubmodules"
  ];
  sint64 maxRetires = 11 [
    (gogoproto.moretags) = "pg:\"max_retries,use_zero\"",
    (gogoproto.jsontag) = "maxRetries"
  ];
  bool enableLFS = 12 [
    (gogoproto.moretags) = "pg:\"enable_lfs,use_zero\"",
    (gogoproto.jsontag) = "enableLFS"
  ];
}

message RepositoryStatus {
  repeated AgentRef agents = 2
      [ (gogoproto.moretags) = "pg:\"-\"", (gogoproto.nullable) = false ];
}

message RepoCredentials {
  RepoUserPassCredentials userPass = 1;
  RepoSSHCredentials ssh = 2;
}

message RepoUserPassCredentials {
  string username = 1;
  string password = 2;
  string clientCertData = 3;
  string clientCertKey = 4;
}

message RepoSSHCredentials { string sshPrivateKey = 1; }

// RepositoryList is a list of repositories
message RepositoryList {
  string apiVersion = 1
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "API Version",
        description : "API Version of the list resource"
        default : "config.k8smgmt.io/v3"
        read_only : true
    } ];
string kind = 2
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "Kind",
        description : "Kind of the list resource"
        default : "RepositoryList"
        read_only : true
    } ];
rafay.dev.types.common.v3.ListMetadata metadata = 3
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "ListMetadata",
        description : "Metadata of the list resource"
        read_only : true
    } ];
  repeated Repository items = 4;
}