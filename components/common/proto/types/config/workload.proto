syntax = "proto3";
package rafay.dev.types.config;

import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "gogoproto/gogo.proto";
import "proto/types/config/config.proto";
import "proto/types/commonpb/v3/common.proto";
import "proto/types/config/placement.proto";

enum DeploymentPlanType {
    // disable enum prefix
    option (gogoproto.goproto_enum_prefix) = false;
  
    DeploymentPlanNotSet = 0;
    ParallelDeploymentPlan = 1;
    CanaryDeploymentPlan = 2;
    BlueGreenDeploymentPlan = 3;
    DependencyDeploymentPlan = 4;
}
  
message ParallelPlanSpec { sint32 maxParallel = 1; }

message Dependency {
    string dependent = 1;
    repeated string dependencies = 2;
}
  
message DependencyPlanSpec {
    sint32 maxParallel = 1;
    repeated Dependency dependencies = 4
        [ (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline" ];
}
  
message CanaryPlanSpec {}
  
message BlueGreenPlanSpec {}
  
message DeploymentPlanSpec {
    DeploymentPlanType planType = 1 [ (gogoproto.jsontag) = "planType" ];
    ParallelPlanSpec parallelSpec = 2;
    CanaryPlanSpec canarySpec = 3;
    BlueGreenPlanSpec blueGreenSpec = 4;
    DependencyPlanSpec dependencySpec = 5;
}

message Workload {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
        title : "Workload"
        description : "Workload"
        required : [ "apiVersion", "kind", "metadata", "spec" ]
    }
    };
    string apiVersion = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "API Version",
            description : "API Version of the resource"
            default : "config.k8smgmt.io/v3"
            read_only : true
        } ];
    string kind = 2
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Kind",
            description : "Kind of the resource"
            default : "Workload"
            read_only : true
        } ];
    rafay.dev.types.common.v3.Metadata metadata = 3
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Metadata",
            description : "Metadata of the resource"
        } ];
    WorkloadSpec spec = 4
        [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
    WorkloadStatus status = 5
        [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
}

message WorkloadSpec {
    string namespace = 1 [
        (gogoproto.moretags) = "pg:\"namespace\"",
        (gogoproto.jsontag) = "namespace"
    ];
    rafay.dev.types.config.PlacementSpec placement = 2 [
        (gogoproto.moretags) = "pg:\"placement\"",
        (gogoproto.nullable) = false
    ];
    DeploymentPlanSpec deploymentPlan = 3 [
        (gogoproto.moretags) = "pg:\"deployment_plan\"",
        (gogoproto.nullable) = false
    ];
    rafay.dev.types.config.ArtifactType artifactType = 4 [
        (gogoproto.moretags) = "pg:\"artifact_type,use_zero\"",
        (gogoproto.jsontag) = "artifactType"
    ];
    repeated rafay.dev.types.config.File artifactFiles = 5 [ (gogoproto.moretags) = "pg:\"-\"" ];
    rafay.dev.types.config.ArtifactExtra extra = 6
        [ (gogoproto.moretags) = "pg:\"extra\"", (gogoproto.nullable) = false ];
    string repositoryRef = 7 [ (gogoproto.moretags) = "pg:\"repository_ref\"" ];
    string templateID = 8;
    rafay.dev.types.config.ShareMode shareMode = 9
        [ (gogoproto.moretags) = "pg:\"share_mode,use_zero\"" ];
    string valueRepositoryRef = 10 [ (gogoproto.moretags) = "pg:\"value_repository_ref\"" ];
    rafay.dev.types.config.RepoArtifactMeta additionalReference = 11  [ (gogoproto.moretags) = "pg:\"additional_reference\"", (gogoproto.nullable) = true ];
}

message ProjectWorkload {
    string workloadID = 1;
    string projectID = 2 [
      (gogoproto.jsontag) = "project_id"
    ];
}

message WorkloadStatus {
     string workloadID = 1 [
       (gogoproto.moretags) = "pg:\"id\""
     ];
    bool publishPending = 2
        [ (gogoproto.moretags) = "pg:\"publish_pending,use_zero\"" ];
    sint64 lastPublishedRevision = 3
        [ (gogoproto.moretags) = "pg:\"last_published_revision,use_zero\"" ];
    repeated ProjectWorkload projects = 4 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        read_only : true
      },
      (gogoproto.moretags) = "pg:\"-\"",
      (gogoproto.nullable) = false,
      (gogoproto.jsontag) = "projects,omitempty"
    ];
}

// WorkloadList is a list of Workloads
message WorkloadList {
    string apiVersion = 1
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "API Version",
              description : "API Version of the list resource"
              default : "config.k8smgmt.io/v3"
              read_only : true
          } ];
    string kind = 2
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "Kind",
              description : "Kind of the list resource"
              default : "WorkloadList"
              read_only : true
          } ];
    rafay.dev.types.common.v3.ListMetadata metadata = 3
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "ListMetadata",
              description : "Metadata of the list resource"
              read_only : true
          } ];
    repeated Workload items = 4;
}

enum WorkloadSnapshotType {
    // disable enum prefix
    option (gogoproto.goproto_enum_prefix) = false;
  
    WorkloadSnapshotTypeNotSet = 0;
    RafayWizardWorkloadJSON = 1;
    ZipArchive = 2;
}
  
  // WorkloadSnapshotConditionType is the condition type of workload
  // snapshot condition
enum WorkloadSnapshotConditionType {
    // disable enum prefix
    option (gogoproto.goproto_enum_prefix) = false;
  
    WorkloadSnapshotValidate = 0;
    WorkloadSnapshotSchedule = 1;
    WorkloadSnapshotUnschedule = 2;
    WorkloadSnapshotClusterDeployed = 3;
    WorkloadSnapshotClusterReady = 4;
    WorkloadSnapshotClusterDrifted = 5;
    WorkloadSnapshotUpdateRepoArtifact = 6;
}
  
  // WorkloadSnapshotCondition is the condition of workload snapshot
message WorkloadSnapshotCondition {
    WorkloadSnapshotConditionType type = 1 [ (gogoproto.jsontag) = "type" ];
    rafay.dev.types.common.v3.Status status = 5
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          title : "Status",
          description : "Status of the resource"
          read_only : true
        } ];
    google.protobuf.Timestamp lastUpdated = 3
        [ (gogoproto.stdtime) = true, (gogoproto.nullable) = false ];
    string reason = 4;
}

message WorkloadSnapshotAuthMeta {
    sint64 accountID = 1;
    bool isSSOUser = 2;
    string userName = 3;
}

message WorkloadSnapshotSpec {
    string namespace = 1 [
      (gogoproto.moretags) = "pg:\"namespace\"",
      (gogoproto.jsontag) = "namespace"
    ];
    rafay.dev.types.config.PlacementSpec placement = 2 [
      (gogoproto.moretags) = "pg:\"placement\"",
      (gogoproto.nullable) = false
    ];
    DeploymentPlanSpec deploymentPlan = 3 [
      (gogoproto.moretags) = "pg:\"deployment_plan\"",
      (gogoproto.nullable) = false
    ];
    rafay.dev.types.config.ArtifactType artifactType = 4 [
      (gogoproto.moretags) = "pg:\"artifact_type,use_zero\"",
      (gogoproto.jsontag) = "artifactType"
    ];
    WorkloadSnapshotType snapshotType = 5
        [ (gogoproto.moretags) = "pg:\"snapshot_type\"" ];
    bytes snapshot = 6
        [ (gogoproto.moretags) = "pg:\"snapshot\"", (gogoproto.jsontag) = "-" ];
    repeated rafay.dev.types.config.FileMeta snapshotFiles = 7 [
      (gogoproto.moretags) = "pg:\"snapshot_files\"",
      (gogoproto.nullable) = false
    ];
    rafay.dev.types.config.ArtifactExtra extra = 8
        [ (gogoproto.moretags) = "pg:\"extra\"", (gogoproto.nullable) = false ];
    WorkloadSnapshotAuthMeta authMeta = 9 [
      (gogoproto.moretags) = "pg:\"auth_meta\"",
      (gogoproto.nullable) = false
    ];
    string workloadName = 10 [
      (gogoproto.moretags) = "pg:\"workload_name\"",
      (gogoproto.jsontag) = "workloadName"
    ];
    string repositoryRef = 11 [ (gogoproto.moretags) = "pg:\"repository_ref\"" ];
    string valueRepositoryRef = 12 [ (gogoproto.moretags) = "pg:\"value_repository_ref\"" ];
    rafay.dev.types.config.RepoArtifactMeta additionalReference = 13  [ (gogoproto.moretags) = "pg:\"additional_reference\"", (gogoproto.nullable) = true ];
}

message WorkloadSnapshotStatus {
    sint64 revision = 1 [ (gogoproto.moretags) = "pg:\"revision\"" ];
    string workloadID = 2 [
      (gogoproto.moretags) = "pg:\"workload_id\""
    ];
    repeated WorkloadSnapshotCondition conditions = 3 [
      (gogoproto.nullable) = false,
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"type\" pg:\"conditions\"",
      (gogoproto.jsontag) = "conditions,omitempty"
    ];
    repeated ClusterMeta assignedClusters = 4 [
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
          "pg:\"assigned_clusters,use_zero\"",
      (gogoproto.nullable) = false
    ];
    repeated ClusterMeta deployedClusters = 5 [
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
          "pg:\"deployed_clusters,use_zero\"",
      (gogoproto.nullable) = false
    ];
    repeated ClusterMeta failedClusters = 6 [
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
          "pg:\"failed_clusters,use_zero\"",
      (gogoproto.nullable) = false
    ];
    repeated ClusterMeta readyClusters = 7 [
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
          "pg:\"ready_clusters,use_zero\"",
      (gogoproto.nullable) = false
    ];
    repeated ClusterMeta driftedClusters = 8 [
      (gogoproto.moretags) =
          "patchStrategy:\"merge\" patchMergeKey:\"clusterID\" "
          "pg:\"drifted_clusters,use_zero\"",
      (gogoproto.nullable) = false
    ];
    string repoSourceVersion = 9
        [ (gogoproto.moretags) = "patchStrategy:\"replace\" "
                                 "pg:\"repo_source_version,use_zero\"" ];
}

message WorkloadSnapshot {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
        title : "WorkloadSnapshot"
        description : "WorkloadSnapshot"
        required : [ "apiVersion", "kind", "metadata", "spec" ]
    }
    };
    string apiVersion = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "API Version",
            description : "API Version of the resource"
            default : "config.k8smgmt.io/v3"
            read_only : true
        } ];
    string kind = 2
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Kind",
            description : "Kind of the resource"
            default : "WorkloadSnapshot"
            read_only : true
        } ];
    rafay.dev.types.common.v3.Metadata metadata = 3
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Metadata",
            description : "Metadata of the resource"
        } ];
    WorkloadSnapshotSpec spec = 4
        [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
    WorkloadSnapshotStatus status = 5
        [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
}
  
message WorkloadSnapshotList {
    string apiVersion = 1
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "API Version",
              description : "API Version of the list resource"
              default : "config.k8smgmt.io/v3"
              read_only : true
          } ];
    string kind = 2
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "Kind",
              description : "Kind of the list resource"
              default : "WorkloadSnapshotList"
              read_only : true
          } ];
    rafay.dev.types.common.v3.ListMetadata metadata = 3
          [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
              title : "ListMetadata",
              description : "Metadata of the list resource"
              read_only : true
          } ];
    repeated WorkloadSnapshot items = 4;
}

message WorkloadTemplateSpec {
  ArtifactType artifactType = 1 [
    (gogoproto.moretags) = "pg:\"artifact_type,use_zero\"",
    (gogoproto.jsontag) = "artifactType"
  ];
  repeated File artifactFiles = 2 [ (gogoproto.moretags) = "pg:\"-\"" ];
  rafay.dev.types.config.ArtifactExtra extra = 3
      [ (gogoproto.moretags) = "pg:\"extra\"", (gogoproto.nullable) = false ];
  string repositoryRef = 4 [ (gogoproto.moretags) = "pg:\"repository_ref\"" ];
}

message WorkloadTemplate {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
        title : "WorkloadTemplate"
        description : "WorkloadTemplate"
        required : [ "apiVersion", "kind", "metadata", "spec" ]
    }
    };
    string apiVersion = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "API Version",
            description : "API Version of the resource"
            default : "config.k8smgmt.io/v3"
            read_only : true
        } ];
    string kind = 2
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Kind",
            description : "Kind of the resource"
            default : "WorkloadTemplate"
            read_only : true
        } ];
    rafay.dev.types.common.v3.Metadata metadata = 3
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            title : "Metadata",
            description : "Metadata of the resource"
        } ];
  WorkloadTemplateSpec spec = 4
      [ (gogoproto.nullable) = false, (gogoproto.embed) = true ];
}

message WorkloadTemplateList {
    string apiVersion = 1
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "API Version",
        description : "API Version of the list resource"
        default : "config.k8smgmt.io/v3"
        read_only : true
    } ];
string kind = 2
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "Kind",
        description : "Kind of the list resource"
        default : "WorkloadSnapshotList"
        read_only : true
    } ];
rafay.dev.types.common.v3.ListMetadata metadata = 3
    [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        title : "ListMetadata",
        description : "Metadata of the list resource"
        read_only : true
    } ];
  repeated WorkloadTemplate items = 4;
}