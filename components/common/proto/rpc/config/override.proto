syntax = "proto3";
package rafay.dev.config.rpc;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/types/commonpb/v3/common.proto";
import "proto/types/config/namespace.proto";
import "proto/types/config/override.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Override Service"
    version: "2.0"
    contact: { name: "Rafay Dev" }
  }
  schemes: HTTPS
  consumes: "application/json"
  consumes: "application/yaml"
  produces: "application/json"
  produces: "application/yaml"
  security_definitions: {
    security: {
      key: "BasicAuth"
      value: { type: TYPE_BASIC }
    }
    security: {
      key: "ApiKeyAuth"
      value: { type: TYPE_API_KEY in: IN_HEADER name: "X-RAFAY-API-KEYID" }
    }
  }
  security: {
    security_requirement: {
      key: "BasicAuth"
      value: {}
    }
    security_requirement: {
      key: "ApiKeyAuth"
      value: {}
    }
  }
  responses: {
    key: "403"
    value: {
      description: "Returned when the user does not have permission to access the resource."
    }
  }
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: { json_schema: { type: STRING } }
    }
  }
};

message DeleteOverrideResponse {}

message ApplyOverrideRequest {
  string selector = 1;
  string type = 2;
  sint64 partnerID = 3;
  sint64 organizationID = 4;
  sint64 projectID = 5;
  rafay.dev.types.config.NamespaceTemplate namespace = 7;
  bool setNamespace = 8;
  bool atleastOne = 9;
}

message ApplyOverrideResponse {
  rafay.dev.types.config.NamespaceTemplate namespace = 2;
}

message ProxyConfig {
  string httpProxy = 1;
  string httpsProxy = 2;
  string noProxy = 3;
  string proxyAuth = 4;
  bool allowInsecureBootstrap = 5;
  bool enabled = 6;
  string bootstrapCA = 7;
}

message AddDefaultOverridesRequest {
  string clusterName = 1;
  sint64 partnerID = 2;
  sint64 organizationID = 3;
  sint64 projectID = 4;
  string pullSecret = 5;
  string controlAddr = 6;
  string apiAddr = 7;
  string token = 8;
  string v1EdgeMetadata = 9;
  string v1CACert = 10;
  string v1WorkloadClientCert = 11;
  string v1WorkloadClientKey = 12;
  string v1PostgresPassword = 13;
  string v1CryptoEdgeCert = 14;
  string v1CryptoEdgeKey = 15;
  string v1CrypotKMIKey = 16;
  string v1EdgeID = 17;
  string v1DebugCert = 18;
  string v1DebugKey = 19;
  string v1ConfigEdgeCert = 20;
  string v1ConfigEdgeKey = 21;
  string v1EdgeClientCert = 22;
  string v1EdgeClientKey = 23;
  string v1FluentdAggregatorAddr = 24;
  string v1AlertManagerYaml = 25;
  string v1DeploymentEnv = 26;
  string v1InfluxDBFQDN = 27;
  string v1InfluxDBPassword = 28;
  string v1PromethuesRelayFQDN = 29;
  string v1EdgeDisplayName = 30;
  string organizationHash = 31;
  string partnerHash = 32;
  string orgDisplayName = 33;
  string partnerDisplayName = 34;
  string v2EventFrmwkCert = 35;
  string v2EventFrmwkKey = 36;
  string V2EventFrameworkFQDN = 37;
  ProxyConfig proxyConfig = 38;
  string connectorPodSpecOverride = 39;
  string connectorContainerSpecOverride = 40;
  string ingressControllerOverride = 41;
  string clusterType = 42;
  string cniProvider = 43;
}

message AddDefaultOverridesResponse {}

service Override {
  rpc CreateOverride(rafay.dev.types.config.Override)
      returns (rafay.dev.types.config.Override) {
    option (google.api.http) = {
      post: "/v2/config/project/{metadata.project}/override"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "201"
        value: { description: "Returned when taskset is created successfully." }
      }
    };
  };

  rpc GetOverride(rafay.dev.types.config.Override)
      returns (rafay.dev.types.config.Override) {
    option (google.api.http) = {
      get: "/v2/config/project/{metadata.project}/override/{metadata.name}"
    };
  };

  rpc GetOverrides(rafay.dev.types.common.v3.QueryOptions)
      returns (rafay.dev.types.config.OverrideList) {
    option (google.api.http) = {
      get: "/v2/config/{urlScope=project/*}/override"
    };
  };

  rpc UpdateOverride(rafay.dev.types.config.Override)
      returns (rafay.dev.types.config.Override) {
    option (google.api.http) = {
      put: "/v2/config/project/{metadata.project}/override/{metadata.name}"
      body: "*"
    };
  };

  rpc DeleteOverride(rafay.dev.types.config.Override)
      returns (DeleteOverrideResponse) {
    option (google.api.http) = {
      delete: "/v2/config/project/{metadata.project}/override/{metadata.name}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204"
        value: {
          description: "Returned when namespace is deleted successfully."
        }
      }
    };
  };

  rpc ApplyOverride(ApplyOverrideRequest) returns (ApplyOverrideResponse) {
    option (google.api.http) = {
      post: "/v2/config/override/apply"
      body: "*"
    };
  };

  rpc AddDefaultOverrides(AddDefaultOverridesRequest)
      returns (AddDefaultOverridesResponse) {
    option (google.api.http) = {
      post: "/v2/config/override/default/cluster"
      body: "*"
    };
  };

}