// Code generated by go-swagger; DO NOT EDIT.

package bootstrap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/sentry/models"
)

// BootstrapDownloadRelayNetworkReader is a Reader for the BootstrapDownloadRelayNetwork structure.
type BootstrapDownloadRelayNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapDownloadRelayNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapDownloadRelayNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewBootstrapDownloadRelayNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapDownloadRelayNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapDownloadRelayNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBootstrapDownloadRelayNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBootstrapDownloadRelayNetworkOK creates a BootstrapDownloadRelayNetworkOK with default headers values
func NewBootstrapDownloadRelayNetworkOK() *BootstrapDownloadRelayNetworkOK {
	return &BootstrapDownloadRelayNetworkOK{}
}

/* BootstrapDownloadRelayNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type BootstrapDownloadRelayNetworkOK struct {
	Payload *models.V3HTTPBody
}

func (o *BootstrapDownloadRelayNetworkOK) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}/download][%d] bootstrapDownloadRelayNetworkOK  %+v", 200, o.Payload)
}
func (o *BootstrapDownloadRelayNetworkOK) GetPayload() *models.V3HTTPBody {
	return o.Payload
}

func (o *BootstrapDownloadRelayNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3HTTPBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapDownloadRelayNetworkForbidden creates a BootstrapDownloadRelayNetworkForbidden with default headers values
func NewBootstrapDownloadRelayNetworkForbidden() *BootstrapDownloadRelayNetworkForbidden {
	return &BootstrapDownloadRelayNetworkForbidden{}
}

/* BootstrapDownloadRelayNetworkForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type BootstrapDownloadRelayNetworkForbidden struct {
	Payload interface{}
}

func (o *BootstrapDownloadRelayNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}/download][%d] bootstrapDownloadRelayNetworkForbidden  %+v", 403, o.Payload)
}
func (o *BootstrapDownloadRelayNetworkForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapDownloadRelayNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapDownloadRelayNetworkNotFound creates a BootstrapDownloadRelayNetworkNotFound with default headers values
func NewBootstrapDownloadRelayNetworkNotFound() *BootstrapDownloadRelayNetworkNotFound {
	return &BootstrapDownloadRelayNetworkNotFound{}
}

/* BootstrapDownloadRelayNetworkNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type BootstrapDownloadRelayNetworkNotFound struct {
	Payload interface{}
}

func (o *BootstrapDownloadRelayNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}/download][%d] bootstrapDownloadRelayNetworkNotFound  %+v", 404, o.Payload)
}
func (o *BootstrapDownloadRelayNetworkNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapDownloadRelayNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapDownloadRelayNetworkInternalServerError creates a BootstrapDownloadRelayNetworkInternalServerError with default headers values
func NewBootstrapDownloadRelayNetworkInternalServerError() *BootstrapDownloadRelayNetworkInternalServerError {
	return &BootstrapDownloadRelayNetworkInternalServerError{}
}

/* BootstrapDownloadRelayNetworkInternalServerError describes a response with status code 500, with default header values.

Returned for internal server error
*/
type BootstrapDownloadRelayNetworkInternalServerError struct {
	Payload interface{}
}

func (o *BootstrapDownloadRelayNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}/download][%d] bootstrapDownloadRelayNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *BootstrapDownloadRelayNetworkInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapDownloadRelayNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapDownloadRelayNetworkDefault creates a BootstrapDownloadRelayNetworkDefault with default headers values
func NewBootstrapDownloadRelayNetworkDefault(code int) *BootstrapDownloadRelayNetworkDefault {
	return &BootstrapDownloadRelayNetworkDefault{
		_statusCode: code,
	}
}

/* BootstrapDownloadRelayNetworkDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BootstrapDownloadRelayNetworkDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the bootstrap download relay network default response
func (o *BootstrapDownloadRelayNetworkDefault) Code() int {
	return o._statusCode
}

func (o *BootstrapDownloadRelayNetworkDefault) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}/download][%d] Bootstrap_DownloadRelayNetwork default  %+v", o._statusCode, o.Payload)
}
func (o *BootstrapDownloadRelayNetworkDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *BootstrapDownloadRelayNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
