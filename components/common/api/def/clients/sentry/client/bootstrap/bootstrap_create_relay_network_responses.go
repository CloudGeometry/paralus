// Code generated by go-swagger; DO NOT EDIT.

package bootstrap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/sentry/models"
)

// BootstrapCreateRelayNetworkReader is a Reader for the BootstrapCreateRelayNetwork structure.
type BootstrapCreateRelayNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapCreateRelayNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapCreateRelayNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewBootstrapCreateRelayNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapCreateRelayNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapCreateRelayNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBootstrapCreateRelayNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBootstrapCreateRelayNetworkOK creates a BootstrapCreateRelayNetworkOK with default headers values
func NewBootstrapCreateRelayNetworkOK() *BootstrapCreateRelayNetworkOK {
	return &BootstrapCreateRelayNetworkOK{}
}

/* BootstrapCreateRelayNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type BootstrapCreateRelayNetworkOK struct {
	Payload *models.SentryRelayNetwork
}

func (o *BootstrapCreateRelayNetworkOK) Error() string {
	return fmt.Sprintf("[POST /v2/sentry/relaynetwork][%d] bootstrapCreateRelayNetworkOK  %+v", 200, o.Payload)
}
func (o *BootstrapCreateRelayNetworkOK) GetPayload() *models.SentryRelayNetwork {
	return o.Payload
}

func (o *BootstrapCreateRelayNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SentryRelayNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapCreateRelayNetworkForbidden creates a BootstrapCreateRelayNetworkForbidden with default headers values
func NewBootstrapCreateRelayNetworkForbidden() *BootstrapCreateRelayNetworkForbidden {
	return &BootstrapCreateRelayNetworkForbidden{}
}

/* BootstrapCreateRelayNetworkForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type BootstrapCreateRelayNetworkForbidden struct {
	Payload interface{}
}

func (o *BootstrapCreateRelayNetworkForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/sentry/relaynetwork][%d] bootstrapCreateRelayNetworkForbidden  %+v", 403, o.Payload)
}
func (o *BootstrapCreateRelayNetworkForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapCreateRelayNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapCreateRelayNetworkNotFound creates a BootstrapCreateRelayNetworkNotFound with default headers values
func NewBootstrapCreateRelayNetworkNotFound() *BootstrapCreateRelayNetworkNotFound {
	return &BootstrapCreateRelayNetworkNotFound{}
}

/* BootstrapCreateRelayNetworkNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type BootstrapCreateRelayNetworkNotFound struct {
	Payload interface{}
}

func (o *BootstrapCreateRelayNetworkNotFound) Error() string {
	return fmt.Sprintf("[POST /v2/sentry/relaynetwork][%d] bootstrapCreateRelayNetworkNotFound  %+v", 404, o.Payload)
}
func (o *BootstrapCreateRelayNetworkNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapCreateRelayNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapCreateRelayNetworkInternalServerError creates a BootstrapCreateRelayNetworkInternalServerError with default headers values
func NewBootstrapCreateRelayNetworkInternalServerError() *BootstrapCreateRelayNetworkInternalServerError {
	return &BootstrapCreateRelayNetworkInternalServerError{}
}

/* BootstrapCreateRelayNetworkInternalServerError describes a response with status code 500, with default header values.

Returned for internal server error
*/
type BootstrapCreateRelayNetworkInternalServerError struct {
	Payload interface{}
}

func (o *BootstrapCreateRelayNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v2/sentry/relaynetwork][%d] bootstrapCreateRelayNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *BootstrapCreateRelayNetworkInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapCreateRelayNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapCreateRelayNetworkDefault creates a BootstrapCreateRelayNetworkDefault with default headers values
func NewBootstrapCreateRelayNetworkDefault(code int) *BootstrapCreateRelayNetworkDefault {
	return &BootstrapCreateRelayNetworkDefault{
		_statusCode: code,
	}
}

/* BootstrapCreateRelayNetworkDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BootstrapCreateRelayNetworkDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the bootstrap create relay network default response
func (o *BootstrapCreateRelayNetworkDefault) Code() int {
	return o._statusCode
}

func (o *BootstrapCreateRelayNetworkDefault) Error() string {
	return fmt.Sprintf("[POST /v2/sentry/relaynetwork][%d] Bootstrap_CreateRelayNetwork default  %+v", o._statusCode, o.Payload)
}
func (o *BootstrapCreateRelayNetworkDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *BootstrapCreateRelayNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
