// Code generated by go-swagger; DO NOT EDIT.

package bootstrap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/sentry/models"
)

// BootstrapGetRelayNetworkReader is a Reader for the BootstrapGetRelayNetwork structure.
type BootstrapGetRelayNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapGetRelayNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapGetRelayNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewBootstrapGetRelayNetworkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapGetRelayNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapGetRelayNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBootstrapGetRelayNetworkDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBootstrapGetRelayNetworkOK creates a BootstrapGetRelayNetworkOK with default headers values
func NewBootstrapGetRelayNetworkOK() *BootstrapGetRelayNetworkOK {
	return &BootstrapGetRelayNetworkOK{}
}

/* BootstrapGetRelayNetworkOK describes a response with status code 200, with default header values.

A successful response.
*/
type BootstrapGetRelayNetworkOK struct {
	Payload *models.SentryRelayNetwork
}

func (o *BootstrapGetRelayNetworkOK) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}][%d] bootstrapGetRelayNetworkOK  %+v", 200, o.Payload)
}
func (o *BootstrapGetRelayNetworkOK) GetPayload() *models.SentryRelayNetwork {
	return o.Payload
}

func (o *BootstrapGetRelayNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SentryRelayNetwork)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworkForbidden creates a BootstrapGetRelayNetworkForbidden with default headers values
func NewBootstrapGetRelayNetworkForbidden() *BootstrapGetRelayNetworkForbidden {
	return &BootstrapGetRelayNetworkForbidden{}
}

/* BootstrapGetRelayNetworkForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type BootstrapGetRelayNetworkForbidden struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworkForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}][%d] bootstrapGetRelayNetworkForbidden  %+v", 403, o.Payload)
}
func (o *BootstrapGetRelayNetworkForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworkNotFound creates a BootstrapGetRelayNetworkNotFound with default headers values
func NewBootstrapGetRelayNetworkNotFound() *BootstrapGetRelayNetworkNotFound {
	return &BootstrapGetRelayNetworkNotFound{}
}

/* BootstrapGetRelayNetworkNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type BootstrapGetRelayNetworkNotFound struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworkNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}][%d] bootstrapGetRelayNetworkNotFound  %+v", 404, o.Payload)
}
func (o *BootstrapGetRelayNetworkNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworkInternalServerError creates a BootstrapGetRelayNetworkInternalServerError with default headers values
func NewBootstrapGetRelayNetworkInternalServerError() *BootstrapGetRelayNetworkInternalServerError {
	return &BootstrapGetRelayNetworkInternalServerError{}
}

/* BootstrapGetRelayNetworkInternalServerError describes a response with status code 500, with default header values.

Returned for internal server error
*/
type BootstrapGetRelayNetworkInternalServerError struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}][%d] bootstrapGetRelayNetworkInternalServerError  %+v", 500, o.Payload)
}
func (o *BootstrapGetRelayNetworkInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworkDefault creates a BootstrapGetRelayNetworkDefault with default headers values
func NewBootstrapGetRelayNetworkDefault(code int) *BootstrapGetRelayNetworkDefault {
	return &BootstrapGetRelayNetworkDefault{
		_statusCode: code,
	}
}

/* BootstrapGetRelayNetworkDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BootstrapGetRelayNetworkDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the bootstrap get relay network default response
func (o *BootstrapGetRelayNetworkDefault) Code() int {
	return o._statusCode
}

func (o *BootstrapGetRelayNetworkDefault) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork/{metadata.name}][%d] Bootstrap_GetRelayNetwork default  %+v", o._statusCode, o.Payload)
}
func (o *BootstrapGetRelayNetworkDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *BootstrapGetRelayNetworkDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
