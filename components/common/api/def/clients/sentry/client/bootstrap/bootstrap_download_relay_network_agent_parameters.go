// Code generated by go-swagger; DO NOT EDIT.

package bootstrap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewBootstrapDownloadRelayNetworkAgentParams creates a new BootstrapDownloadRelayNetworkAgentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBootstrapDownloadRelayNetworkAgentParams() *BootstrapDownloadRelayNetworkAgentParams {
	return &BootstrapDownloadRelayNetworkAgentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBootstrapDownloadRelayNetworkAgentParamsWithTimeout creates a new BootstrapDownloadRelayNetworkAgentParams object
// with the ability to set a timeout on a request.
func NewBootstrapDownloadRelayNetworkAgentParamsWithTimeout(timeout time.Duration) *BootstrapDownloadRelayNetworkAgentParams {
	return &BootstrapDownloadRelayNetworkAgentParams{
		timeout: timeout,
	}
}

// NewBootstrapDownloadRelayNetworkAgentParamsWithContext creates a new BootstrapDownloadRelayNetworkAgentParams object
// with the ability to set a context for a request.
func NewBootstrapDownloadRelayNetworkAgentParamsWithContext(ctx context.Context) *BootstrapDownloadRelayNetworkAgentParams {
	return &BootstrapDownloadRelayNetworkAgentParams{
		Context: ctx,
	}
}

// NewBootstrapDownloadRelayNetworkAgentParamsWithHTTPClient creates a new BootstrapDownloadRelayNetworkAgentParams object
// with the ability to set a custom HTTPClient for a request.
func NewBootstrapDownloadRelayNetworkAgentParamsWithHTTPClient(client *http.Client) *BootstrapDownloadRelayNetworkAgentParams {
	return &BootstrapDownloadRelayNetworkAgentParams{
		HTTPClient: client,
	}
}

/* BootstrapDownloadRelayNetworkAgentParams contains all the parameters to send to the API endpoint
   for the bootstrap download relay network agent operation.

   Typically these are written to a http.Request.
*/
type BootstrapDownloadRelayNetworkAgentParams struct {

	// ClusterScope.
	ClusterScope string

	/* MetadataDescription.

	   Description. description of the resource
	*/
	MetadataDescription *string

	// MetadataID.
	MetadataID *string

	// MetadataModifiedAt.
	//
	// Format: date-time
	MetadataModifiedAt *strfmt.DateTime

	/* MetadataName.

	   name of the resource
	*/
	MetadataName string

	/* MetadataOrganization.

	   Organization. Organization to which the resource belongs
	*/
	MetadataOrganization *string

	/* MetadataPartner.

	   Partner. Partner to which the resource belongs
	*/
	MetadataPartner *string

	/* MetadataProject.

	   Project. Project of the resource
	*/
	MetadataProject *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the bootstrap download relay network agent params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BootstrapDownloadRelayNetworkAgentParams) WithDefaults() *BootstrapDownloadRelayNetworkAgentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the bootstrap download relay network agent params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BootstrapDownloadRelayNetworkAgentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithTimeout(timeout time.Duration) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithContext(ctx context.Context) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithHTTPClient(client *http.Client) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterScope adds the clusterScope to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithClusterScope(clusterScope string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetClusterScope(clusterScope)
	return o
}

// SetClusterScope adds the clusterScope to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetClusterScope(clusterScope string) {
	o.ClusterScope = clusterScope
}

// WithMetadataDescription adds the metadataDescription to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataDescription(metadataDescription *string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataDescription(metadataDescription)
	return o
}

// SetMetadataDescription adds the metadataDescription to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataDescription(metadataDescription *string) {
	o.MetadataDescription = metadataDescription
}

// WithMetadataID adds the metadataID to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataID(metadataID *string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataID(metadataID)
	return o
}

// SetMetadataID adds the metadataId to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataID(metadataID *string) {
	o.MetadataID = metadataID
}

// WithMetadataModifiedAt adds the metadataModifiedAt to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataModifiedAt(metadataModifiedAt *strfmt.DateTime) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataModifiedAt(metadataModifiedAt)
	return o
}

// SetMetadataModifiedAt adds the metadataModifiedAt to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataModifiedAt(metadataModifiedAt *strfmt.DateTime) {
	o.MetadataModifiedAt = metadataModifiedAt
}

// WithMetadataName adds the metadataName to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataName(metadataName string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataName(metadataName)
	return o
}

// SetMetadataName adds the metadataName to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataName(metadataName string) {
	o.MetadataName = metadataName
}

// WithMetadataOrganization adds the metadataOrganization to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataOrganization(metadataOrganization *string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataOrganization(metadataOrganization)
	return o
}

// SetMetadataOrganization adds the metadataOrganization to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataOrganization(metadataOrganization *string) {
	o.MetadataOrganization = metadataOrganization
}

// WithMetadataPartner adds the metadataPartner to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataPartner(metadataPartner *string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataPartner(metadataPartner)
	return o
}

// SetMetadataPartner adds the metadataPartner to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataPartner(metadataPartner *string) {
	o.MetadataPartner = metadataPartner
}

// WithMetadataProject adds the metadataProject to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) WithMetadataProject(metadataProject *string) *BootstrapDownloadRelayNetworkAgentParams {
	o.SetMetadataProject(metadataProject)
	return o
}

// SetMetadataProject adds the metadataProject to the bootstrap download relay network agent params
func (o *BootstrapDownloadRelayNetworkAgentParams) SetMetadataProject(metadataProject *string) {
	o.MetadataProject = metadataProject
}

// WriteToRequest writes these params to a swagger request
func (o *BootstrapDownloadRelayNetworkAgentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterScope
	if err := r.SetPathParam("clusterScope", o.ClusterScope); err != nil {
		return err
	}

	if o.MetadataDescription != nil {

		// query param metadata.description
		var qrMetadataDescription string

		if o.MetadataDescription != nil {
			qrMetadataDescription = *o.MetadataDescription
		}
		qMetadataDescription := qrMetadataDescription
		if qMetadataDescription != "" {

			if err := r.SetQueryParam("metadata.description", qMetadataDescription); err != nil {
				return err
			}
		}
	}

	if o.MetadataID != nil {

		// query param metadata.id
		var qrMetadataID string

		if o.MetadataID != nil {
			qrMetadataID = *o.MetadataID
		}
		qMetadataID := qrMetadataID
		if qMetadataID != "" {

			if err := r.SetQueryParam("metadata.id", qMetadataID); err != nil {
				return err
			}
		}
	}

	if o.MetadataModifiedAt != nil {

		// query param metadata.modifiedAt
		var qrMetadataModifiedAt strfmt.DateTime

		if o.MetadataModifiedAt != nil {
			qrMetadataModifiedAt = *o.MetadataModifiedAt
		}
		qMetadataModifiedAt := qrMetadataModifiedAt.String()
		if qMetadataModifiedAt != "" {

			if err := r.SetQueryParam("metadata.modifiedAt", qMetadataModifiedAt); err != nil {
				return err
			}
		}
	}

	// path param metadata.name
	if err := r.SetPathParam("metadata.name", o.MetadataName); err != nil {
		return err
	}

	if o.MetadataOrganization != nil {

		// query param metadata.organization
		var qrMetadataOrganization string

		if o.MetadataOrganization != nil {
			qrMetadataOrganization = *o.MetadataOrganization
		}
		qMetadataOrganization := qrMetadataOrganization
		if qMetadataOrganization != "" {

			if err := r.SetQueryParam("metadata.organization", qMetadataOrganization); err != nil {
				return err
			}
		}
	}

	if o.MetadataPartner != nil {

		// query param metadata.partner
		var qrMetadataPartner string

		if o.MetadataPartner != nil {
			qrMetadataPartner = *o.MetadataPartner
		}
		qMetadataPartner := qrMetadataPartner
		if qMetadataPartner != "" {

			if err := r.SetQueryParam("metadata.partner", qMetadataPartner); err != nil {
				return err
			}
		}
	}

	if o.MetadataProject != nil {

		// query param metadata.project
		var qrMetadataProject string

		if o.MetadataProject != nil {
			qrMetadataProject = *o.MetadataProject
		}
		qMetadataProject := qrMetadataProject
		if qMetadataProject != "" {

			if err := r.SetQueryParam("metadata.project", qMetadataProject); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
