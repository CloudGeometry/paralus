// Code generated by go-swagger; DO NOT EDIT.

package bootstrap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/sentry/models"
)

// BootstrapGetRelayNetworksReader is a Reader for the BootstrapGetRelayNetworks structure.
type BootstrapGetRelayNetworksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapGetRelayNetworksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapGetRelayNetworksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewBootstrapGetRelayNetworksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapGetRelayNetworksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapGetRelayNetworksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewBootstrapGetRelayNetworksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBootstrapGetRelayNetworksOK creates a BootstrapGetRelayNetworksOK with default headers values
func NewBootstrapGetRelayNetworksOK() *BootstrapGetRelayNetworksOK {
	return &BootstrapGetRelayNetworksOK{}
}

/* BootstrapGetRelayNetworksOK describes a response with status code 200, with default header values.

A successful response.
*/
type BootstrapGetRelayNetworksOK struct {
	Payload *models.SentryRelayNetworkList
}

func (o *BootstrapGetRelayNetworksOK) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork][%d] bootstrapGetRelayNetworksOK  %+v", 200, o.Payload)
}
func (o *BootstrapGetRelayNetworksOK) GetPayload() *models.SentryRelayNetworkList {
	return o.Payload
}

func (o *BootstrapGetRelayNetworksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SentryRelayNetworkList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworksForbidden creates a BootstrapGetRelayNetworksForbidden with default headers values
func NewBootstrapGetRelayNetworksForbidden() *BootstrapGetRelayNetworksForbidden {
	return &BootstrapGetRelayNetworksForbidden{}
}

/* BootstrapGetRelayNetworksForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type BootstrapGetRelayNetworksForbidden struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworksForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork][%d] bootstrapGetRelayNetworksForbidden  %+v", 403, o.Payload)
}
func (o *BootstrapGetRelayNetworksForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworksNotFound creates a BootstrapGetRelayNetworksNotFound with default headers values
func NewBootstrapGetRelayNetworksNotFound() *BootstrapGetRelayNetworksNotFound {
	return &BootstrapGetRelayNetworksNotFound{}
}

/* BootstrapGetRelayNetworksNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type BootstrapGetRelayNetworksNotFound struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworksNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork][%d] bootstrapGetRelayNetworksNotFound  %+v", 404, o.Payload)
}
func (o *BootstrapGetRelayNetworksNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworksInternalServerError creates a BootstrapGetRelayNetworksInternalServerError with default headers values
func NewBootstrapGetRelayNetworksInternalServerError() *BootstrapGetRelayNetworksInternalServerError {
	return &BootstrapGetRelayNetworksInternalServerError{}
}

/* BootstrapGetRelayNetworksInternalServerError describes a response with status code 500, with default header values.

Returned for internal server error
*/
type BootstrapGetRelayNetworksInternalServerError struct {
	Payload interface{}
}

func (o *BootstrapGetRelayNetworksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork][%d] bootstrapGetRelayNetworksInternalServerError  %+v", 500, o.Payload)
}
func (o *BootstrapGetRelayNetworksInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *BootstrapGetRelayNetworksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapGetRelayNetworksDefault creates a BootstrapGetRelayNetworksDefault with default headers values
func NewBootstrapGetRelayNetworksDefault(code int) *BootstrapGetRelayNetworksDefault {
	return &BootstrapGetRelayNetworksDefault{
		_statusCode: code,
	}
}

/* BootstrapGetRelayNetworksDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type BootstrapGetRelayNetworksDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the bootstrap get relay networks default response
func (o *BootstrapGetRelayNetworksDefault) Code() int {
	return o._statusCode
}

func (o *BootstrapGetRelayNetworksDefault) Error() string {
	return fmt.Sprintf("[GET /v2/sentry/relaynetwork][%d] Bootstrap_GetRelayNetworks default  %+v", o._statusCode, o.Payload)
}
func (o *BootstrapGetRelayNetworksDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *BootstrapGetRelayNetworksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
