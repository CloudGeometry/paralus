// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RPCAddDefaultOverridesRequest rpc add default overrides request
//
// swagger:model rpcAddDefaultOverridesRequest
type RPCAddDefaultOverridesRequest struct {

	// v2 event framework f q d n
	V2EventFrameworkFQDN string `json:"V2EventFrameworkFQDN,omitempty"`

	// api addr
	APIAddr string `json:"apiAddr,omitempty"`

	// cluster name
	ClusterName string `json:"clusterName,omitempty"`

	// cluster type
	ClusterType string `json:"clusterType,omitempty"`

	// cni provider
	CniProvider string `json:"cniProvider,omitempty"`

	// connector container spec override
	ConnectorContainerSpecOverride string `json:"connectorContainerSpecOverride,omitempty"`

	// connector pod spec override
	ConnectorPodSpecOverride string `json:"connectorPodSpecOverride,omitempty"`

	// control addr
	ControlAddr string `json:"controlAddr,omitempty"`

	// ingress controller override
	IngressControllerOverride string `json:"ingressControllerOverride,omitempty"`

	// org display name
	OrgDisplayName string `json:"orgDisplayName,omitempty"`

	// organization hash
	OrganizationHash string `json:"organizationHash,omitempty"`

	// organization ID
	OrganizationID string `json:"organizationID,omitempty"`

	// partner display name
	PartnerDisplayName string `json:"partnerDisplayName,omitempty"`

	// partner hash
	PartnerHash string `json:"partnerHash,omitempty"`

	// partner ID
	PartnerID string `json:"partnerID,omitempty"`

	// project ID
	ProjectID string `json:"projectID,omitempty"`

	// proxy config
	ProxyConfig *RPCProxyConfig `json:"proxyConfig,omitempty"`

	// pull secret
	PullSecret string `json:"pullSecret,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// v1 alert manager yaml
	V1AlertManagerYaml string `json:"v1AlertManagerYaml,omitempty"`

	// v1 c a cert
	V1CACert string `json:"v1CACert,omitempty"`

	// v1 config edge cert
	V1ConfigEdgeCert string `json:"v1ConfigEdgeCert,omitempty"`

	// v1 config edge key
	V1ConfigEdgeKey string `json:"v1ConfigEdgeKey,omitempty"`

	// v1 crypot k m i key
	V1CrypotKMIKey string `json:"v1CrypotKMIKey,omitempty"`

	// v1 crypto edge cert
	V1CryptoEdgeCert string `json:"v1CryptoEdgeCert,omitempty"`

	// v1 crypto edge key
	V1CryptoEdgeKey string `json:"v1CryptoEdgeKey,omitempty"`

	// v1 debug cert
	V1DebugCert string `json:"v1DebugCert,omitempty"`

	// v1 debug key
	V1DebugKey string `json:"v1DebugKey,omitempty"`

	// v1 deployment env
	V1DeploymentEnv string `json:"v1DeploymentEnv,omitempty"`

	// v1 edge client cert
	V1EdgeClientCert string `json:"v1EdgeClientCert,omitempty"`

	// v1 edge client key
	V1EdgeClientKey string `json:"v1EdgeClientKey,omitempty"`

	// v1 edge display name
	V1EdgeDisplayName string `json:"v1EdgeDisplayName,omitempty"`

	// v1 edge ID
	V1EdgeID string `json:"v1EdgeID,omitempty"`

	// v1 edge metadata
	V1EdgeMetadata string `json:"v1EdgeMetadata,omitempty"`

	// v1 fluentd aggregator addr
	V1FluentdAggregatorAddr string `json:"v1FluentdAggregatorAddr,omitempty"`

	// v1 influx d b f q d n
	V1InfluxDBFQDN string `json:"v1InfluxDBFQDN,omitempty"`

	// v1 influx d b password
	V1InfluxDBPassword string `json:"v1InfluxDBPassword,omitempty"`

	// v1 postgres password
	V1PostgresPassword string `json:"v1PostgresPassword,omitempty"`

	// v1 promethues relay f q d n
	V1PromethuesRelayFQDN string `json:"v1PromethuesRelayFQDN,omitempty"`

	// v1 workload client cert
	V1WorkloadClientCert string `json:"v1WorkloadClientCert,omitempty"`

	// v1 workload client key
	V1WorkloadClientKey string `json:"v1WorkloadClientKey,omitempty"`

	// v2 event frmwk cert
	V2EventFrmwkCert string `json:"v2EventFrmwkCert,omitempty"`

	// v2 event frmwk key
	V2EventFrmwkKey string `json:"v2EventFrmwkKey,omitempty"`
}

// Validate validates this rpc add default overrides request
func (m *RPCAddDefaultOverridesRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProxyConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RPCAddDefaultOverridesRequest) validateProxyConfig(formats strfmt.Registry) error {
	if swag.IsZero(m.ProxyConfig) { // not required
		return nil
	}

	if m.ProxyConfig != nil {
		if err := m.ProxyConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("proxyConfig")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("proxyConfig")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this rpc add default overrides request based on the context it is used
func (m *RPCAddDefaultOverridesRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateProxyConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RPCAddDefaultOverridesRequest) contextValidateProxyConfig(ctx context.Context, formats strfmt.Registry) error {

	if m.ProxyConfig != nil {
		if err := m.ProxyConfig.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("proxyConfig")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("proxyConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RPCAddDefaultOverridesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RPCAddDefaultOverridesRequest) UnmarshalBinary(b []byte) error {
	var res RPCAddDefaultOverridesRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
