// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RPCProxyConfig rpc proxy config
//
// swagger:model rpcProxyConfig
type RPCProxyConfig struct {

	// allow insecure bootstrap
	AllowInsecureBootstrap bool `json:"allowInsecureBootstrap,omitempty"`

	// bootstrap c a
	BootstrapCA string `json:"bootstrapCA,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// http proxy
	HTTPProxy string `json:"httpProxy,omitempty"`

	// https proxy
	HTTPSProxy string `json:"httpsProxy,omitempty"`

	// no proxy
	NoProxy string `json:"noProxy,omitempty"`

	// proxy auth
	ProxyAuth string `json:"proxyAuth,omitempty"`
}

// Validate validates this rpc proxy config
func (m *RPCProxyConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this rpc proxy config based on context it is used
func (m *RPCProxyConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RPCProxyConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RPCProxyConfig) UnmarshalBinary(b []byte) error {
	var res RPCProxyConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
