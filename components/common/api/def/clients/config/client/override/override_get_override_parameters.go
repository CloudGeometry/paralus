// Code generated by go-swagger; DO NOT EDIT.

package override

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewOverrideGetOverrideParams creates a new OverrideGetOverrideParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewOverrideGetOverrideParams() *OverrideGetOverrideParams {
	return &OverrideGetOverrideParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewOverrideGetOverrideParamsWithTimeout creates a new OverrideGetOverrideParams object
// with the ability to set a timeout on a request.
func NewOverrideGetOverrideParamsWithTimeout(timeout time.Duration) *OverrideGetOverrideParams {
	return &OverrideGetOverrideParams{
		timeout: timeout,
	}
}

// NewOverrideGetOverrideParamsWithContext creates a new OverrideGetOverrideParams object
// with the ability to set a context for a request.
func NewOverrideGetOverrideParamsWithContext(ctx context.Context) *OverrideGetOverrideParams {
	return &OverrideGetOverrideParams{
		Context: ctx,
	}
}

// NewOverrideGetOverrideParamsWithHTTPClient creates a new OverrideGetOverrideParams object
// with the ability to set a custom HTTPClient for a request.
func NewOverrideGetOverrideParamsWithHTTPClient(client *http.Client) *OverrideGetOverrideParams {
	return &OverrideGetOverrideParams{
		HTTPClient: client,
	}
}

/* OverrideGetOverrideParams contains all the parameters to send to the API endpoint
   for the override get override operation.

   Typically these are written to a http.Request.
*/
type OverrideGetOverrideParams struct {

	/* APIVersion.

	   API Version. API Version of the resource

	   Default: "config.k8smgmt.io/v3"
	*/
	APIVersion *string

	/* Kind.

	   Kind. Kind of the resource

	   Default: "Cluster"
	*/
	Kind *string

	/* MetadataDescription.

	   Description. description of the resource
	*/
	MetadataDescription *string

	// MetadataID.
	MetadataID *string

	// MetadataModifiedAt.
	//
	// Format: date-time
	MetadataModifiedAt *strfmt.DateTime

	/* MetadataName.

	   name of the resource
	*/
	MetadataName string

	/* MetadataOrganization.

	   Organization. Organization to which the resource belongs
	*/
	MetadataOrganization *string

	/* MetadataPartner.

	   Partner. Partner to which the resource belongs
	*/
	MetadataPartner *string

	/* MetadataProject.

	   Project of the resource
	*/
	MetadataProject string

	// SpecClusterPlacementClusterSelector.
	SpecClusterPlacementClusterSelector *string

	// SpecClusterPlacementDriftAction.
	//
	// Default: "DriftReconcillationActionNotSet"
	SpecClusterPlacementDriftAction *string

	// SpecClusterPlacementNodeGroupingKeys.
	SpecClusterPlacementNodeGroupingKeys []string

	/* SpecClusterPlacementPlacementType.

	   placementType is the type of placement.

	   Default: "ClusterSelector"
	*/
	SpecClusterPlacementPlacementType *string

	// SpecClusterSelector.
	SpecClusterSelector *string

	// SpecRepoArtifactMetaGitRevision.
	SpecRepoArtifactMetaGitRevision *string

	// SpecRepoArtifactMetaHelmChartName.
	SpecRepoArtifactMetaHelmChartName *string

	// SpecRepoArtifactMetaHelmTag.
	SpecRepoArtifactMetaHelmTag *string

	// SpecRepoArtifactMetaTimeout.
	//
	// Format: int64
	SpecRepoArtifactMetaTimeout *string

	// SpecRepositoryRef.
	SpecRepositoryRef *string

	/* SpecResourceSelector.

	     an override is only applied if selector matches the taskset/namespace
	labels.
	*/
	SpecResourceSelector *string

	// SpecTemplateOverridesV2EventFrameworkFQDN.
	SpecTemplateOverridesV2EventFrameworkFQDN *string

	// SpecTemplateOverridesClusterName.
	SpecTemplateOverridesClusterName *string

	// SpecTemplateOverridesOrgDisplayName.
	SpecTemplateOverridesOrgDisplayName *string

	// SpecTemplateOverridesOrganizationHash.
	SpecTemplateOverridesOrganizationHash *string

	// SpecTemplateOverridesOrganizationID.
	//
	// Format: int64
	SpecTemplateOverridesOrganizationID *string

	// SpecTemplateOverridesPartnerDisplayName.
	SpecTemplateOverridesPartnerDisplayName *string

	// SpecTemplateOverridesPartnerHash.
	SpecTemplateOverridesPartnerHash *string

	// SpecTemplateOverridesPartnerID.
	//
	// Format: int64
	SpecTemplateOverridesPartnerID *string

	// SpecTemplateOverridesProjectID.
	//
	// Format: int64
	SpecTemplateOverridesProjectID *string

	// SpecTemplateOverridesProxyURL.
	SpecTemplateOverridesProxyURL *string

	// SpecTemplateOverridesV1DeploymentEnv.
	SpecTemplateOverridesV1DeploymentEnv *string

	// SpecTemplateOverridesV1EdgeDisplayName.
	SpecTemplateOverridesV1EdgeDisplayName *string

	// SpecTemplateOverridesV1EdgeID.
	SpecTemplateOverridesV1EdgeID *string

	// SpecTemplateOverridesV1FluentdAggregatorAddr.
	SpecTemplateOverridesV1FluentdAggregatorAddr *string

	// SpecTemplateOverridesV1InfluxDBFQDN.
	SpecTemplateOverridesV1InfluxDBFQDN *string

	// SpecTemplateOverridesV1InfluxDBPassword.
	SpecTemplateOverridesV1InfluxDBPassword *string

	// SpecTemplateOverridesV1PromethuesRelayFQDN.
	SpecTemplateOverridesV1PromethuesRelayFQDN *string

	// SpecValuesFile.
	SpecValuesFile *string

	/* StatusConditionStatus.

	   Condition Status. status of the condition

	   Default: "StatusNotSet"
	*/
	StatusConditionStatus *string

	/* StatusConditionType.

	   Condition Type. type of the status condition
	*/
	StatusConditionType *string

	/* StatusLastUpdated.

	   Last Updated. when the condition status is last updated

	   Format: date-time
	*/
	StatusLastUpdated *strfmt.DateTime

	/* StatusReason.

	   Reason. reason of the last condition status
	*/
	StatusReason *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the override get override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OverrideGetOverrideParams) WithDefaults() *OverrideGetOverrideParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the override get override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OverrideGetOverrideParams) SetDefaults() {
	var (
		aPIVersionDefault = string("config.k8smgmt.io/v3")

		kindDefault = string("Cluster")

		specClusterPlacementDriftActionDefault = string("DriftReconcillationActionNotSet")

		specClusterPlacementPlacementTypeDefault = string("ClusterSelector")

		statusConditionStatusDefault = string("StatusNotSet")
	)

	val := OverrideGetOverrideParams{
		APIVersion:                        &aPIVersionDefault,
		Kind:                              &kindDefault,
		SpecClusterPlacementDriftAction:   &specClusterPlacementDriftActionDefault,
		SpecClusterPlacementPlacementType: &specClusterPlacementPlacementTypeDefault,
		StatusConditionStatus:             &statusConditionStatusDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the override get override params
func (o *OverrideGetOverrideParams) WithTimeout(timeout time.Duration) *OverrideGetOverrideParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the override get override params
func (o *OverrideGetOverrideParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the override get override params
func (o *OverrideGetOverrideParams) WithContext(ctx context.Context) *OverrideGetOverrideParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the override get override params
func (o *OverrideGetOverrideParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the override get override params
func (o *OverrideGetOverrideParams) WithHTTPClient(client *http.Client) *OverrideGetOverrideParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the override get override params
func (o *OverrideGetOverrideParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the override get override params
func (o *OverrideGetOverrideParams) WithAPIVersion(aPIVersion *string) *OverrideGetOverrideParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the override get override params
func (o *OverrideGetOverrideParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithKind adds the kind to the override get override params
func (o *OverrideGetOverrideParams) WithKind(kind *string) *OverrideGetOverrideParams {
	o.SetKind(kind)
	return o
}

// SetKind adds the kind to the override get override params
func (o *OverrideGetOverrideParams) SetKind(kind *string) {
	o.Kind = kind
}

// WithMetadataDescription adds the metadataDescription to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataDescription(metadataDescription *string) *OverrideGetOverrideParams {
	o.SetMetadataDescription(metadataDescription)
	return o
}

// SetMetadataDescription adds the metadataDescription to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataDescription(metadataDescription *string) {
	o.MetadataDescription = metadataDescription
}

// WithMetadataID adds the metadataID to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataID(metadataID *string) *OverrideGetOverrideParams {
	o.SetMetadataID(metadataID)
	return o
}

// SetMetadataID adds the metadataId to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataID(metadataID *string) {
	o.MetadataID = metadataID
}

// WithMetadataModifiedAt adds the metadataModifiedAt to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataModifiedAt(metadataModifiedAt *strfmt.DateTime) *OverrideGetOverrideParams {
	o.SetMetadataModifiedAt(metadataModifiedAt)
	return o
}

// SetMetadataModifiedAt adds the metadataModifiedAt to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataModifiedAt(metadataModifiedAt *strfmt.DateTime) {
	o.MetadataModifiedAt = metadataModifiedAt
}

// WithMetadataName adds the metadataName to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataName(metadataName string) *OverrideGetOverrideParams {
	o.SetMetadataName(metadataName)
	return o
}

// SetMetadataName adds the metadataName to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataName(metadataName string) {
	o.MetadataName = metadataName
}

// WithMetadataOrganization adds the metadataOrganization to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataOrganization(metadataOrganization *string) *OverrideGetOverrideParams {
	o.SetMetadataOrganization(metadataOrganization)
	return o
}

// SetMetadataOrganization adds the metadataOrganization to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataOrganization(metadataOrganization *string) {
	o.MetadataOrganization = metadataOrganization
}

// WithMetadataPartner adds the metadataPartner to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataPartner(metadataPartner *string) *OverrideGetOverrideParams {
	o.SetMetadataPartner(metadataPartner)
	return o
}

// SetMetadataPartner adds the metadataPartner to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataPartner(metadataPartner *string) {
	o.MetadataPartner = metadataPartner
}

// WithMetadataProject adds the metadataProject to the override get override params
func (o *OverrideGetOverrideParams) WithMetadataProject(metadataProject string) *OverrideGetOverrideParams {
	o.SetMetadataProject(metadataProject)
	return o
}

// SetMetadataProject adds the metadataProject to the override get override params
func (o *OverrideGetOverrideParams) SetMetadataProject(metadataProject string) {
	o.MetadataProject = metadataProject
}

// WithSpecClusterPlacementClusterSelector adds the specClusterPlacementClusterSelector to the override get override params
func (o *OverrideGetOverrideParams) WithSpecClusterPlacementClusterSelector(specClusterPlacementClusterSelector *string) *OverrideGetOverrideParams {
	o.SetSpecClusterPlacementClusterSelector(specClusterPlacementClusterSelector)
	return o
}

// SetSpecClusterPlacementClusterSelector adds the specClusterPlacementClusterSelector to the override get override params
func (o *OverrideGetOverrideParams) SetSpecClusterPlacementClusterSelector(specClusterPlacementClusterSelector *string) {
	o.SpecClusterPlacementClusterSelector = specClusterPlacementClusterSelector
}

// WithSpecClusterPlacementDriftAction adds the specClusterPlacementDriftAction to the override get override params
func (o *OverrideGetOverrideParams) WithSpecClusterPlacementDriftAction(specClusterPlacementDriftAction *string) *OverrideGetOverrideParams {
	o.SetSpecClusterPlacementDriftAction(specClusterPlacementDriftAction)
	return o
}

// SetSpecClusterPlacementDriftAction adds the specClusterPlacementDriftAction to the override get override params
func (o *OverrideGetOverrideParams) SetSpecClusterPlacementDriftAction(specClusterPlacementDriftAction *string) {
	o.SpecClusterPlacementDriftAction = specClusterPlacementDriftAction
}

// WithSpecClusterPlacementNodeGroupingKeys adds the specClusterPlacementNodeGroupingKeys to the override get override params
func (o *OverrideGetOverrideParams) WithSpecClusterPlacementNodeGroupingKeys(specClusterPlacementNodeGroupingKeys []string) *OverrideGetOverrideParams {
	o.SetSpecClusterPlacementNodeGroupingKeys(specClusterPlacementNodeGroupingKeys)
	return o
}

// SetSpecClusterPlacementNodeGroupingKeys adds the specClusterPlacementNodeGroupingKeys to the override get override params
func (o *OverrideGetOverrideParams) SetSpecClusterPlacementNodeGroupingKeys(specClusterPlacementNodeGroupingKeys []string) {
	o.SpecClusterPlacementNodeGroupingKeys = specClusterPlacementNodeGroupingKeys
}

// WithSpecClusterPlacementPlacementType adds the specClusterPlacementPlacementType to the override get override params
func (o *OverrideGetOverrideParams) WithSpecClusterPlacementPlacementType(specClusterPlacementPlacementType *string) *OverrideGetOverrideParams {
	o.SetSpecClusterPlacementPlacementType(specClusterPlacementPlacementType)
	return o
}

// SetSpecClusterPlacementPlacementType adds the specClusterPlacementPlacementType to the override get override params
func (o *OverrideGetOverrideParams) SetSpecClusterPlacementPlacementType(specClusterPlacementPlacementType *string) {
	o.SpecClusterPlacementPlacementType = specClusterPlacementPlacementType
}

// WithSpecClusterSelector adds the specClusterSelector to the override get override params
func (o *OverrideGetOverrideParams) WithSpecClusterSelector(specClusterSelector *string) *OverrideGetOverrideParams {
	o.SetSpecClusterSelector(specClusterSelector)
	return o
}

// SetSpecClusterSelector adds the specClusterSelector to the override get override params
func (o *OverrideGetOverrideParams) SetSpecClusterSelector(specClusterSelector *string) {
	o.SpecClusterSelector = specClusterSelector
}

// WithSpecRepoArtifactMetaGitRevision adds the specRepoArtifactMetaGitRevision to the override get override params
func (o *OverrideGetOverrideParams) WithSpecRepoArtifactMetaGitRevision(specRepoArtifactMetaGitRevision *string) *OverrideGetOverrideParams {
	o.SetSpecRepoArtifactMetaGitRevision(specRepoArtifactMetaGitRevision)
	return o
}

// SetSpecRepoArtifactMetaGitRevision adds the specRepoArtifactMetaGitRevision to the override get override params
func (o *OverrideGetOverrideParams) SetSpecRepoArtifactMetaGitRevision(specRepoArtifactMetaGitRevision *string) {
	o.SpecRepoArtifactMetaGitRevision = specRepoArtifactMetaGitRevision
}

// WithSpecRepoArtifactMetaHelmChartName adds the specRepoArtifactMetaHelmChartName to the override get override params
func (o *OverrideGetOverrideParams) WithSpecRepoArtifactMetaHelmChartName(specRepoArtifactMetaHelmChartName *string) *OverrideGetOverrideParams {
	o.SetSpecRepoArtifactMetaHelmChartName(specRepoArtifactMetaHelmChartName)
	return o
}

// SetSpecRepoArtifactMetaHelmChartName adds the specRepoArtifactMetaHelmChartName to the override get override params
func (o *OverrideGetOverrideParams) SetSpecRepoArtifactMetaHelmChartName(specRepoArtifactMetaHelmChartName *string) {
	o.SpecRepoArtifactMetaHelmChartName = specRepoArtifactMetaHelmChartName
}

// WithSpecRepoArtifactMetaHelmTag adds the specRepoArtifactMetaHelmTag to the override get override params
func (o *OverrideGetOverrideParams) WithSpecRepoArtifactMetaHelmTag(specRepoArtifactMetaHelmTag *string) *OverrideGetOverrideParams {
	o.SetSpecRepoArtifactMetaHelmTag(specRepoArtifactMetaHelmTag)
	return o
}

// SetSpecRepoArtifactMetaHelmTag adds the specRepoArtifactMetaHelmTag to the override get override params
func (o *OverrideGetOverrideParams) SetSpecRepoArtifactMetaHelmTag(specRepoArtifactMetaHelmTag *string) {
	o.SpecRepoArtifactMetaHelmTag = specRepoArtifactMetaHelmTag
}

// WithSpecRepoArtifactMetaTimeout adds the specRepoArtifactMetaTimeout to the override get override params
func (o *OverrideGetOverrideParams) WithSpecRepoArtifactMetaTimeout(specRepoArtifactMetaTimeout *string) *OverrideGetOverrideParams {
	o.SetSpecRepoArtifactMetaTimeout(specRepoArtifactMetaTimeout)
	return o
}

// SetSpecRepoArtifactMetaTimeout adds the specRepoArtifactMetaTimeout to the override get override params
func (o *OverrideGetOverrideParams) SetSpecRepoArtifactMetaTimeout(specRepoArtifactMetaTimeout *string) {
	o.SpecRepoArtifactMetaTimeout = specRepoArtifactMetaTimeout
}

// WithSpecRepositoryRef adds the specRepositoryRef to the override get override params
func (o *OverrideGetOverrideParams) WithSpecRepositoryRef(specRepositoryRef *string) *OverrideGetOverrideParams {
	o.SetSpecRepositoryRef(specRepositoryRef)
	return o
}

// SetSpecRepositoryRef adds the specRepositoryRef to the override get override params
func (o *OverrideGetOverrideParams) SetSpecRepositoryRef(specRepositoryRef *string) {
	o.SpecRepositoryRef = specRepositoryRef
}

// WithSpecResourceSelector adds the specResourceSelector to the override get override params
func (o *OverrideGetOverrideParams) WithSpecResourceSelector(specResourceSelector *string) *OverrideGetOverrideParams {
	o.SetSpecResourceSelector(specResourceSelector)
	return o
}

// SetSpecResourceSelector adds the specResourceSelector to the override get override params
func (o *OverrideGetOverrideParams) SetSpecResourceSelector(specResourceSelector *string) {
	o.SpecResourceSelector = specResourceSelector
}

// WithSpecTemplateOverridesV2EventFrameworkFQDN adds the specTemplateOverridesV2EventFrameworkFQDN to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV2EventFrameworkFQDN(specTemplateOverridesV2EventFrameworkFQDN *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV2EventFrameworkFQDN(specTemplateOverridesV2EventFrameworkFQDN)
	return o
}

// SetSpecTemplateOverridesV2EventFrameworkFQDN adds the specTemplateOverridesV2EventFrameworkFQDN to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV2EventFrameworkFQDN(specTemplateOverridesV2EventFrameworkFQDN *string) {
	o.SpecTemplateOverridesV2EventFrameworkFQDN = specTemplateOverridesV2EventFrameworkFQDN
}

// WithSpecTemplateOverridesClusterName adds the specTemplateOverridesClusterName to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesClusterName(specTemplateOverridesClusterName *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesClusterName(specTemplateOverridesClusterName)
	return o
}

// SetSpecTemplateOverridesClusterName adds the specTemplateOverridesClusterName to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesClusterName(specTemplateOverridesClusterName *string) {
	o.SpecTemplateOverridesClusterName = specTemplateOverridesClusterName
}

// WithSpecTemplateOverridesOrgDisplayName adds the specTemplateOverridesOrgDisplayName to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesOrgDisplayName(specTemplateOverridesOrgDisplayName *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesOrgDisplayName(specTemplateOverridesOrgDisplayName)
	return o
}

// SetSpecTemplateOverridesOrgDisplayName adds the specTemplateOverridesOrgDisplayName to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesOrgDisplayName(specTemplateOverridesOrgDisplayName *string) {
	o.SpecTemplateOverridesOrgDisplayName = specTemplateOverridesOrgDisplayName
}

// WithSpecTemplateOverridesOrganizationHash adds the specTemplateOverridesOrganizationHash to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesOrganizationHash(specTemplateOverridesOrganizationHash *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesOrganizationHash(specTemplateOverridesOrganizationHash)
	return o
}

// SetSpecTemplateOverridesOrganizationHash adds the specTemplateOverridesOrganizationHash to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesOrganizationHash(specTemplateOverridesOrganizationHash *string) {
	o.SpecTemplateOverridesOrganizationHash = specTemplateOverridesOrganizationHash
}

// WithSpecTemplateOverridesOrganizationID adds the specTemplateOverridesOrganizationID to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesOrganizationID(specTemplateOverridesOrganizationID *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesOrganizationID(specTemplateOverridesOrganizationID)
	return o
}

// SetSpecTemplateOverridesOrganizationID adds the specTemplateOverridesOrganizationId to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesOrganizationID(specTemplateOverridesOrganizationID *string) {
	o.SpecTemplateOverridesOrganizationID = specTemplateOverridesOrganizationID
}

// WithSpecTemplateOverridesPartnerDisplayName adds the specTemplateOverridesPartnerDisplayName to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesPartnerDisplayName(specTemplateOverridesPartnerDisplayName *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesPartnerDisplayName(specTemplateOverridesPartnerDisplayName)
	return o
}

// SetSpecTemplateOverridesPartnerDisplayName adds the specTemplateOverridesPartnerDisplayName to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesPartnerDisplayName(specTemplateOverridesPartnerDisplayName *string) {
	o.SpecTemplateOverridesPartnerDisplayName = specTemplateOverridesPartnerDisplayName
}

// WithSpecTemplateOverridesPartnerHash adds the specTemplateOverridesPartnerHash to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesPartnerHash(specTemplateOverridesPartnerHash *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesPartnerHash(specTemplateOverridesPartnerHash)
	return o
}

// SetSpecTemplateOverridesPartnerHash adds the specTemplateOverridesPartnerHash to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesPartnerHash(specTemplateOverridesPartnerHash *string) {
	o.SpecTemplateOverridesPartnerHash = specTemplateOverridesPartnerHash
}

// WithSpecTemplateOverridesPartnerID adds the specTemplateOverridesPartnerID to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesPartnerID(specTemplateOverridesPartnerID *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesPartnerID(specTemplateOverridesPartnerID)
	return o
}

// SetSpecTemplateOverridesPartnerID adds the specTemplateOverridesPartnerId to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesPartnerID(specTemplateOverridesPartnerID *string) {
	o.SpecTemplateOverridesPartnerID = specTemplateOverridesPartnerID
}

// WithSpecTemplateOverridesProjectID adds the specTemplateOverridesProjectID to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesProjectID(specTemplateOverridesProjectID *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesProjectID(specTemplateOverridesProjectID)
	return o
}

// SetSpecTemplateOverridesProjectID adds the specTemplateOverridesProjectId to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesProjectID(specTemplateOverridesProjectID *string) {
	o.SpecTemplateOverridesProjectID = specTemplateOverridesProjectID
}

// WithSpecTemplateOverridesProxyURL adds the specTemplateOverridesProxyURL to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesProxyURL(specTemplateOverridesProxyURL *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesProxyURL(specTemplateOverridesProxyURL)
	return o
}

// SetSpecTemplateOverridesProxyURL adds the specTemplateOverridesProxyUrl to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesProxyURL(specTemplateOverridesProxyURL *string) {
	o.SpecTemplateOverridesProxyURL = specTemplateOverridesProxyURL
}

// WithSpecTemplateOverridesV1DeploymentEnv adds the specTemplateOverridesV1DeploymentEnv to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1DeploymentEnv(specTemplateOverridesV1DeploymentEnv *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1DeploymentEnv(specTemplateOverridesV1DeploymentEnv)
	return o
}

// SetSpecTemplateOverridesV1DeploymentEnv adds the specTemplateOverridesV1DeploymentEnv to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1DeploymentEnv(specTemplateOverridesV1DeploymentEnv *string) {
	o.SpecTemplateOverridesV1DeploymentEnv = specTemplateOverridesV1DeploymentEnv
}

// WithSpecTemplateOverridesV1EdgeDisplayName adds the specTemplateOverridesV1EdgeDisplayName to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1EdgeDisplayName(specTemplateOverridesV1EdgeDisplayName *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1EdgeDisplayName(specTemplateOverridesV1EdgeDisplayName)
	return o
}

// SetSpecTemplateOverridesV1EdgeDisplayName adds the specTemplateOverridesV1EdgeDisplayName to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1EdgeDisplayName(specTemplateOverridesV1EdgeDisplayName *string) {
	o.SpecTemplateOverridesV1EdgeDisplayName = specTemplateOverridesV1EdgeDisplayName
}

// WithSpecTemplateOverridesV1EdgeID adds the specTemplateOverridesV1EdgeID to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1EdgeID(specTemplateOverridesV1EdgeID *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1EdgeID(specTemplateOverridesV1EdgeID)
	return o
}

// SetSpecTemplateOverridesV1EdgeID adds the specTemplateOverridesV1EdgeId to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1EdgeID(specTemplateOverridesV1EdgeID *string) {
	o.SpecTemplateOverridesV1EdgeID = specTemplateOverridesV1EdgeID
}

// WithSpecTemplateOverridesV1FluentdAggregatorAddr adds the specTemplateOverridesV1FluentdAggregatorAddr to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1FluentdAggregatorAddr(specTemplateOverridesV1FluentdAggregatorAddr *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1FluentdAggregatorAddr(specTemplateOverridesV1FluentdAggregatorAddr)
	return o
}

// SetSpecTemplateOverridesV1FluentdAggregatorAddr adds the specTemplateOverridesV1FluentdAggregatorAddr to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1FluentdAggregatorAddr(specTemplateOverridesV1FluentdAggregatorAddr *string) {
	o.SpecTemplateOverridesV1FluentdAggregatorAddr = specTemplateOverridesV1FluentdAggregatorAddr
}

// WithSpecTemplateOverridesV1InfluxDBFQDN adds the specTemplateOverridesV1InfluxDBFQDN to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1InfluxDBFQDN(specTemplateOverridesV1InfluxDBFQDN *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1InfluxDBFQDN(specTemplateOverridesV1InfluxDBFQDN)
	return o
}

// SetSpecTemplateOverridesV1InfluxDBFQDN adds the specTemplateOverridesV1InfluxDBFQDN to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1InfluxDBFQDN(specTemplateOverridesV1InfluxDBFQDN *string) {
	o.SpecTemplateOverridesV1InfluxDBFQDN = specTemplateOverridesV1InfluxDBFQDN
}

// WithSpecTemplateOverridesV1InfluxDBPassword adds the specTemplateOverridesV1InfluxDBPassword to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1InfluxDBPassword(specTemplateOverridesV1InfluxDBPassword *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1InfluxDBPassword(specTemplateOverridesV1InfluxDBPassword)
	return o
}

// SetSpecTemplateOverridesV1InfluxDBPassword adds the specTemplateOverridesV1InfluxDBPassword to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1InfluxDBPassword(specTemplateOverridesV1InfluxDBPassword *string) {
	o.SpecTemplateOverridesV1InfluxDBPassword = specTemplateOverridesV1InfluxDBPassword
}

// WithSpecTemplateOverridesV1PromethuesRelayFQDN adds the specTemplateOverridesV1PromethuesRelayFQDN to the override get override params
func (o *OverrideGetOverrideParams) WithSpecTemplateOverridesV1PromethuesRelayFQDN(specTemplateOverridesV1PromethuesRelayFQDN *string) *OverrideGetOverrideParams {
	o.SetSpecTemplateOverridesV1PromethuesRelayFQDN(specTemplateOverridesV1PromethuesRelayFQDN)
	return o
}

// SetSpecTemplateOverridesV1PromethuesRelayFQDN adds the specTemplateOverridesV1PromethuesRelayFQDN to the override get override params
func (o *OverrideGetOverrideParams) SetSpecTemplateOverridesV1PromethuesRelayFQDN(specTemplateOverridesV1PromethuesRelayFQDN *string) {
	o.SpecTemplateOverridesV1PromethuesRelayFQDN = specTemplateOverridesV1PromethuesRelayFQDN
}

// WithSpecValuesFile adds the specValuesFile to the override get override params
func (o *OverrideGetOverrideParams) WithSpecValuesFile(specValuesFile *string) *OverrideGetOverrideParams {
	o.SetSpecValuesFile(specValuesFile)
	return o
}

// SetSpecValuesFile adds the specValuesFile to the override get override params
func (o *OverrideGetOverrideParams) SetSpecValuesFile(specValuesFile *string) {
	o.SpecValuesFile = specValuesFile
}

// WithStatusConditionStatus adds the statusConditionStatus to the override get override params
func (o *OverrideGetOverrideParams) WithStatusConditionStatus(statusConditionStatus *string) *OverrideGetOverrideParams {
	o.SetStatusConditionStatus(statusConditionStatus)
	return o
}

// SetStatusConditionStatus adds the statusConditionStatus to the override get override params
func (o *OverrideGetOverrideParams) SetStatusConditionStatus(statusConditionStatus *string) {
	o.StatusConditionStatus = statusConditionStatus
}

// WithStatusConditionType adds the statusConditionType to the override get override params
func (o *OverrideGetOverrideParams) WithStatusConditionType(statusConditionType *string) *OverrideGetOverrideParams {
	o.SetStatusConditionType(statusConditionType)
	return o
}

// SetStatusConditionType adds the statusConditionType to the override get override params
func (o *OverrideGetOverrideParams) SetStatusConditionType(statusConditionType *string) {
	o.StatusConditionType = statusConditionType
}

// WithStatusLastUpdated adds the statusLastUpdated to the override get override params
func (o *OverrideGetOverrideParams) WithStatusLastUpdated(statusLastUpdated *strfmt.DateTime) *OverrideGetOverrideParams {
	o.SetStatusLastUpdated(statusLastUpdated)
	return o
}

// SetStatusLastUpdated adds the statusLastUpdated to the override get override params
func (o *OverrideGetOverrideParams) SetStatusLastUpdated(statusLastUpdated *strfmt.DateTime) {
	o.StatusLastUpdated = statusLastUpdated
}

// WithStatusReason adds the statusReason to the override get override params
func (o *OverrideGetOverrideParams) WithStatusReason(statusReason *string) *OverrideGetOverrideParams {
	o.SetStatusReason(statusReason)
	return o
}

// SetStatusReason adds the statusReason to the override get override params
func (o *OverrideGetOverrideParams) SetStatusReason(statusReason *string) {
	o.StatusReason = statusReason
}

// WriteToRequest writes these params to a swagger request
func (o *OverrideGetOverrideParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// query param apiVersion
		var qrAPIVersion string

		if o.APIVersion != nil {
			qrAPIVersion = *o.APIVersion
		}
		qAPIVersion := qrAPIVersion
		if qAPIVersion != "" {

			if err := r.SetQueryParam("apiVersion", qAPIVersion); err != nil {
				return err
			}
		}
	}

	if o.Kind != nil {

		// query param kind
		var qrKind string

		if o.Kind != nil {
			qrKind = *o.Kind
		}
		qKind := qrKind
		if qKind != "" {

			if err := r.SetQueryParam("kind", qKind); err != nil {
				return err
			}
		}
	}

	if o.MetadataDescription != nil {

		// query param metadata.description
		var qrMetadataDescription string

		if o.MetadataDescription != nil {
			qrMetadataDescription = *o.MetadataDescription
		}
		qMetadataDescription := qrMetadataDescription
		if qMetadataDescription != "" {

			if err := r.SetQueryParam("metadata.description", qMetadataDescription); err != nil {
				return err
			}
		}
	}

	if o.MetadataID != nil {

		// query param metadata.id
		var qrMetadataID string

		if o.MetadataID != nil {
			qrMetadataID = *o.MetadataID
		}
		qMetadataID := qrMetadataID
		if qMetadataID != "" {

			if err := r.SetQueryParam("metadata.id", qMetadataID); err != nil {
				return err
			}
		}
	}

	if o.MetadataModifiedAt != nil {

		// query param metadata.modifiedAt
		var qrMetadataModifiedAt strfmt.DateTime

		if o.MetadataModifiedAt != nil {
			qrMetadataModifiedAt = *o.MetadataModifiedAt
		}
		qMetadataModifiedAt := qrMetadataModifiedAt.String()
		if qMetadataModifiedAt != "" {

			if err := r.SetQueryParam("metadata.modifiedAt", qMetadataModifiedAt); err != nil {
				return err
			}
		}
	}

	// path param metadata.name
	if err := r.SetPathParam("metadata.name", o.MetadataName); err != nil {
		return err
	}

	if o.MetadataOrganization != nil {

		// query param metadata.organization
		var qrMetadataOrganization string

		if o.MetadataOrganization != nil {
			qrMetadataOrganization = *o.MetadataOrganization
		}
		qMetadataOrganization := qrMetadataOrganization
		if qMetadataOrganization != "" {

			if err := r.SetQueryParam("metadata.organization", qMetadataOrganization); err != nil {
				return err
			}
		}
	}

	if o.MetadataPartner != nil {

		// query param metadata.partner
		var qrMetadataPartner string

		if o.MetadataPartner != nil {
			qrMetadataPartner = *o.MetadataPartner
		}
		qMetadataPartner := qrMetadataPartner
		if qMetadataPartner != "" {

			if err := r.SetQueryParam("metadata.partner", qMetadataPartner); err != nil {
				return err
			}
		}
	}

	// path param metadata.project
	if err := r.SetPathParam("metadata.project", o.MetadataProject); err != nil {
		return err
	}

	if o.SpecClusterPlacementClusterSelector != nil {

		// query param spec.clusterPlacement.clusterSelector
		var qrSpecClusterPlacementClusterSelector string

		if o.SpecClusterPlacementClusterSelector != nil {
			qrSpecClusterPlacementClusterSelector = *o.SpecClusterPlacementClusterSelector
		}
		qSpecClusterPlacementClusterSelector := qrSpecClusterPlacementClusterSelector
		if qSpecClusterPlacementClusterSelector != "" {

			if err := r.SetQueryParam("spec.clusterPlacement.clusterSelector", qSpecClusterPlacementClusterSelector); err != nil {
				return err
			}
		}
	}

	if o.SpecClusterPlacementDriftAction != nil {

		// query param spec.clusterPlacement.driftAction
		var qrSpecClusterPlacementDriftAction string

		if o.SpecClusterPlacementDriftAction != nil {
			qrSpecClusterPlacementDriftAction = *o.SpecClusterPlacementDriftAction
		}
		qSpecClusterPlacementDriftAction := qrSpecClusterPlacementDriftAction
		if qSpecClusterPlacementDriftAction != "" {

			if err := r.SetQueryParam("spec.clusterPlacement.driftAction", qSpecClusterPlacementDriftAction); err != nil {
				return err
			}
		}
	}

	if o.SpecClusterPlacementNodeGroupingKeys != nil {

		// binding items for spec.clusterPlacement.nodeGroupingKeys
		joinedSpecClusterPlacementNodeGroupingKeys := o.bindParamSpecClusterPlacementNodeGroupingKeys(reg)

		// query array param spec.clusterPlacement.nodeGroupingKeys
		if err := r.SetQueryParam("spec.clusterPlacement.nodeGroupingKeys", joinedSpecClusterPlacementNodeGroupingKeys...); err != nil {
			return err
		}
	}

	if o.SpecClusterPlacementPlacementType != nil {

		// query param spec.clusterPlacement.placementType
		var qrSpecClusterPlacementPlacementType string

		if o.SpecClusterPlacementPlacementType != nil {
			qrSpecClusterPlacementPlacementType = *o.SpecClusterPlacementPlacementType
		}
		qSpecClusterPlacementPlacementType := qrSpecClusterPlacementPlacementType
		if qSpecClusterPlacementPlacementType != "" {

			if err := r.SetQueryParam("spec.clusterPlacement.placementType", qSpecClusterPlacementPlacementType); err != nil {
				return err
			}
		}
	}

	if o.SpecClusterSelector != nil {

		// query param spec.clusterSelector
		var qrSpecClusterSelector string

		if o.SpecClusterSelector != nil {
			qrSpecClusterSelector = *o.SpecClusterSelector
		}
		qSpecClusterSelector := qrSpecClusterSelector
		if qSpecClusterSelector != "" {

			if err := r.SetQueryParam("spec.clusterSelector", qSpecClusterSelector); err != nil {
				return err
			}
		}
	}

	if o.SpecRepoArtifactMetaGitRevision != nil {

		// query param spec.repoArtifactMeta.git.revision
		var qrSpecRepoArtifactMetaGitRevision string

		if o.SpecRepoArtifactMetaGitRevision != nil {
			qrSpecRepoArtifactMetaGitRevision = *o.SpecRepoArtifactMetaGitRevision
		}
		qSpecRepoArtifactMetaGitRevision := qrSpecRepoArtifactMetaGitRevision
		if qSpecRepoArtifactMetaGitRevision != "" {

			if err := r.SetQueryParam("spec.repoArtifactMeta.git.revision", qSpecRepoArtifactMetaGitRevision); err != nil {
				return err
			}
		}
	}

	if o.SpecRepoArtifactMetaHelmChartName != nil {

		// query param spec.repoArtifactMeta.helm.chartName
		var qrSpecRepoArtifactMetaHelmChartName string

		if o.SpecRepoArtifactMetaHelmChartName != nil {
			qrSpecRepoArtifactMetaHelmChartName = *o.SpecRepoArtifactMetaHelmChartName
		}
		qSpecRepoArtifactMetaHelmChartName := qrSpecRepoArtifactMetaHelmChartName
		if qSpecRepoArtifactMetaHelmChartName != "" {

			if err := r.SetQueryParam("spec.repoArtifactMeta.helm.chartName", qSpecRepoArtifactMetaHelmChartName); err != nil {
				return err
			}
		}
	}

	if o.SpecRepoArtifactMetaHelmTag != nil {

		// query param spec.repoArtifactMeta.helm.tag
		var qrSpecRepoArtifactMetaHelmTag string

		if o.SpecRepoArtifactMetaHelmTag != nil {
			qrSpecRepoArtifactMetaHelmTag = *o.SpecRepoArtifactMetaHelmTag
		}
		qSpecRepoArtifactMetaHelmTag := qrSpecRepoArtifactMetaHelmTag
		if qSpecRepoArtifactMetaHelmTag != "" {

			if err := r.SetQueryParam("spec.repoArtifactMeta.helm.tag", qSpecRepoArtifactMetaHelmTag); err != nil {
				return err
			}
		}
	}

	if o.SpecRepoArtifactMetaTimeout != nil {

		// query param spec.repoArtifactMeta.timeout
		var qrSpecRepoArtifactMetaTimeout string

		if o.SpecRepoArtifactMetaTimeout != nil {
			qrSpecRepoArtifactMetaTimeout = *o.SpecRepoArtifactMetaTimeout
		}
		qSpecRepoArtifactMetaTimeout := qrSpecRepoArtifactMetaTimeout
		if qSpecRepoArtifactMetaTimeout != "" {

			if err := r.SetQueryParam("spec.repoArtifactMeta.timeout", qSpecRepoArtifactMetaTimeout); err != nil {
				return err
			}
		}
	}

	if o.SpecRepositoryRef != nil {

		// query param spec.repositoryRef
		var qrSpecRepositoryRef string

		if o.SpecRepositoryRef != nil {
			qrSpecRepositoryRef = *o.SpecRepositoryRef
		}
		qSpecRepositoryRef := qrSpecRepositoryRef
		if qSpecRepositoryRef != "" {

			if err := r.SetQueryParam("spec.repositoryRef", qSpecRepositoryRef); err != nil {
				return err
			}
		}
	}

	if o.SpecResourceSelector != nil {

		// query param spec.resourceSelector
		var qrSpecResourceSelector string

		if o.SpecResourceSelector != nil {
			qrSpecResourceSelector = *o.SpecResourceSelector
		}
		qSpecResourceSelector := qrSpecResourceSelector
		if qSpecResourceSelector != "" {

			if err := r.SetQueryParam("spec.resourceSelector", qSpecResourceSelector); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV2EventFrameworkFQDN != nil {

		// query param spec.templateOverrides.V2EventFrameworkFQDN
		var qrSpecTemplateOverridesV2EventFrameworkFQDN string

		if o.SpecTemplateOverridesV2EventFrameworkFQDN != nil {
			qrSpecTemplateOverridesV2EventFrameworkFQDN = *o.SpecTemplateOverridesV2EventFrameworkFQDN
		}
		qSpecTemplateOverridesV2EventFrameworkFQDN := qrSpecTemplateOverridesV2EventFrameworkFQDN
		if qSpecTemplateOverridesV2EventFrameworkFQDN != "" {

			if err := r.SetQueryParam("spec.templateOverrides.V2EventFrameworkFQDN", qSpecTemplateOverridesV2EventFrameworkFQDN); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesClusterName != nil {

		// query param spec.templateOverrides.clusterName
		var qrSpecTemplateOverridesClusterName string

		if o.SpecTemplateOverridesClusterName != nil {
			qrSpecTemplateOverridesClusterName = *o.SpecTemplateOverridesClusterName
		}
		qSpecTemplateOverridesClusterName := qrSpecTemplateOverridesClusterName
		if qSpecTemplateOverridesClusterName != "" {

			if err := r.SetQueryParam("spec.templateOverrides.clusterName", qSpecTemplateOverridesClusterName); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesOrgDisplayName != nil {

		// query param spec.templateOverrides.orgDisplayName
		var qrSpecTemplateOverridesOrgDisplayName string

		if o.SpecTemplateOverridesOrgDisplayName != nil {
			qrSpecTemplateOverridesOrgDisplayName = *o.SpecTemplateOverridesOrgDisplayName
		}
		qSpecTemplateOverridesOrgDisplayName := qrSpecTemplateOverridesOrgDisplayName
		if qSpecTemplateOverridesOrgDisplayName != "" {

			if err := r.SetQueryParam("spec.templateOverrides.orgDisplayName", qSpecTemplateOverridesOrgDisplayName); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesOrganizationHash != nil {

		// query param spec.templateOverrides.organizationHash
		var qrSpecTemplateOverridesOrganizationHash string

		if o.SpecTemplateOverridesOrganizationHash != nil {
			qrSpecTemplateOverridesOrganizationHash = *o.SpecTemplateOverridesOrganizationHash
		}
		qSpecTemplateOverridesOrganizationHash := qrSpecTemplateOverridesOrganizationHash
		if qSpecTemplateOverridesOrganizationHash != "" {

			if err := r.SetQueryParam("spec.templateOverrides.organizationHash", qSpecTemplateOverridesOrganizationHash); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesOrganizationID != nil {

		// query param spec.templateOverrides.organizationID
		var qrSpecTemplateOverridesOrganizationID string

		if o.SpecTemplateOverridesOrganizationID != nil {
			qrSpecTemplateOverridesOrganizationID = *o.SpecTemplateOverridesOrganizationID
		}
		qSpecTemplateOverridesOrganizationID := qrSpecTemplateOverridesOrganizationID
		if qSpecTemplateOverridesOrganizationID != "" {

			if err := r.SetQueryParam("spec.templateOverrides.organizationID", qSpecTemplateOverridesOrganizationID); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesPartnerDisplayName != nil {

		// query param spec.templateOverrides.partnerDisplayName
		var qrSpecTemplateOverridesPartnerDisplayName string

		if o.SpecTemplateOverridesPartnerDisplayName != nil {
			qrSpecTemplateOverridesPartnerDisplayName = *o.SpecTemplateOverridesPartnerDisplayName
		}
		qSpecTemplateOverridesPartnerDisplayName := qrSpecTemplateOverridesPartnerDisplayName
		if qSpecTemplateOverridesPartnerDisplayName != "" {

			if err := r.SetQueryParam("spec.templateOverrides.partnerDisplayName", qSpecTemplateOverridesPartnerDisplayName); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesPartnerHash != nil {

		// query param spec.templateOverrides.partnerHash
		var qrSpecTemplateOverridesPartnerHash string

		if o.SpecTemplateOverridesPartnerHash != nil {
			qrSpecTemplateOverridesPartnerHash = *o.SpecTemplateOverridesPartnerHash
		}
		qSpecTemplateOverridesPartnerHash := qrSpecTemplateOverridesPartnerHash
		if qSpecTemplateOverridesPartnerHash != "" {

			if err := r.SetQueryParam("spec.templateOverrides.partnerHash", qSpecTemplateOverridesPartnerHash); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesPartnerID != nil {

		// query param spec.templateOverrides.partnerID
		var qrSpecTemplateOverridesPartnerID string

		if o.SpecTemplateOverridesPartnerID != nil {
			qrSpecTemplateOverridesPartnerID = *o.SpecTemplateOverridesPartnerID
		}
		qSpecTemplateOverridesPartnerID := qrSpecTemplateOverridesPartnerID
		if qSpecTemplateOverridesPartnerID != "" {

			if err := r.SetQueryParam("spec.templateOverrides.partnerID", qSpecTemplateOverridesPartnerID); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesProjectID != nil {

		// query param spec.templateOverrides.projectID
		var qrSpecTemplateOverridesProjectID string

		if o.SpecTemplateOverridesProjectID != nil {
			qrSpecTemplateOverridesProjectID = *o.SpecTemplateOverridesProjectID
		}
		qSpecTemplateOverridesProjectID := qrSpecTemplateOverridesProjectID
		if qSpecTemplateOverridesProjectID != "" {

			if err := r.SetQueryParam("spec.templateOverrides.projectID", qSpecTemplateOverridesProjectID); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesProxyURL != nil {

		// query param spec.templateOverrides.proxyURL
		var qrSpecTemplateOverridesProxyURL string

		if o.SpecTemplateOverridesProxyURL != nil {
			qrSpecTemplateOverridesProxyURL = *o.SpecTemplateOverridesProxyURL
		}
		qSpecTemplateOverridesProxyURL := qrSpecTemplateOverridesProxyURL
		if qSpecTemplateOverridesProxyURL != "" {

			if err := r.SetQueryParam("spec.templateOverrides.proxyURL", qSpecTemplateOverridesProxyURL); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1DeploymentEnv != nil {

		// query param spec.templateOverrides.v1DeploymentEnv
		var qrSpecTemplateOverridesV1DeploymentEnv string

		if o.SpecTemplateOverridesV1DeploymentEnv != nil {
			qrSpecTemplateOverridesV1DeploymentEnv = *o.SpecTemplateOverridesV1DeploymentEnv
		}
		qSpecTemplateOverridesV1DeploymentEnv := qrSpecTemplateOverridesV1DeploymentEnv
		if qSpecTemplateOverridesV1DeploymentEnv != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1DeploymentEnv", qSpecTemplateOverridesV1DeploymentEnv); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1EdgeDisplayName != nil {

		// query param spec.templateOverrides.v1EdgeDisplayName
		var qrSpecTemplateOverridesV1EdgeDisplayName string

		if o.SpecTemplateOverridesV1EdgeDisplayName != nil {
			qrSpecTemplateOverridesV1EdgeDisplayName = *o.SpecTemplateOverridesV1EdgeDisplayName
		}
		qSpecTemplateOverridesV1EdgeDisplayName := qrSpecTemplateOverridesV1EdgeDisplayName
		if qSpecTemplateOverridesV1EdgeDisplayName != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1EdgeDisplayName", qSpecTemplateOverridesV1EdgeDisplayName); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1EdgeID != nil {

		// query param spec.templateOverrides.v1EdgeID
		var qrSpecTemplateOverridesV1EdgeID string

		if o.SpecTemplateOverridesV1EdgeID != nil {
			qrSpecTemplateOverridesV1EdgeID = *o.SpecTemplateOverridesV1EdgeID
		}
		qSpecTemplateOverridesV1EdgeID := qrSpecTemplateOverridesV1EdgeID
		if qSpecTemplateOverridesV1EdgeID != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1EdgeID", qSpecTemplateOverridesV1EdgeID); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1FluentdAggregatorAddr != nil {

		// query param spec.templateOverrides.v1FluentdAggregatorAddr
		var qrSpecTemplateOverridesV1FluentdAggregatorAddr string

		if o.SpecTemplateOverridesV1FluentdAggregatorAddr != nil {
			qrSpecTemplateOverridesV1FluentdAggregatorAddr = *o.SpecTemplateOverridesV1FluentdAggregatorAddr
		}
		qSpecTemplateOverridesV1FluentdAggregatorAddr := qrSpecTemplateOverridesV1FluentdAggregatorAddr
		if qSpecTemplateOverridesV1FluentdAggregatorAddr != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1FluentdAggregatorAddr", qSpecTemplateOverridesV1FluentdAggregatorAddr); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1InfluxDBFQDN != nil {

		// query param spec.templateOverrides.v1InfluxDBFQDN
		var qrSpecTemplateOverridesV1InfluxDBFQDN string

		if o.SpecTemplateOverridesV1InfluxDBFQDN != nil {
			qrSpecTemplateOverridesV1InfluxDBFQDN = *o.SpecTemplateOverridesV1InfluxDBFQDN
		}
		qSpecTemplateOverridesV1InfluxDBFQDN := qrSpecTemplateOverridesV1InfluxDBFQDN
		if qSpecTemplateOverridesV1InfluxDBFQDN != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1InfluxDBFQDN", qSpecTemplateOverridesV1InfluxDBFQDN); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1InfluxDBPassword != nil {

		// query param spec.templateOverrides.v1InfluxDBPassword
		var qrSpecTemplateOverridesV1InfluxDBPassword string

		if o.SpecTemplateOverridesV1InfluxDBPassword != nil {
			qrSpecTemplateOverridesV1InfluxDBPassword = *o.SpecTemplateOverridesV1InfluxDBPassword
		}
		qSpecTemplateOverridesV1InfluxDBPassword := qrSpecTemplateOverridesV1InfluxDBPassword
		if qSpecTemplateOverridesV1InfluxDBPassword != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1InfluxDBPassword", qSpecTemplateOverridesV1InfluxDBPassword); err != nil {
				return err
			}
		}
	}

	if o.SpecTemplateOverridesV1PromethuesRelayFQDN != nil {

		// query param spec.templateOverrides.v1PromethuesRelayFQDN
		var qrSpecTemplateOverridesV1PromethuesRelayFQDN string

		if o.SpecTemplateOverridesV1PromethuesRelayFQDN != nil {
			qrSpecTemplateOverridesV1PromethuesRelayFQDN = *o.SpecTemplateOverridesV1PromethuesRelayFQDN
		}
		qSpecTemplateOverridesV1PromethuesRelayFQDN := qrSpecTemplateOverridesV1PromethuesRelayFQDN
		if qSpecTemplateOverridesV1PromethuesRelayFQDN != "" {

			if err := r.SetQueryParam("spec.templateOverrides.v1PromethuesRelayFQDN", qSpecTemplateOverridesV1PromethuesRelayFQDN); err != nil {
				return err
			}
		}
	}

	if o.SpecValuesFile != nil {

		// query param spec.valuesFile
		var qrSpecValuesFile string

		if o.SpecValuesFile != nil {
			qrSpecValuesFile = *o.SpecValuesFile
		}
		qSpecValuesFile := qrSpecValuesFile
		if qSpecValuesFile != "" {

			if err := r.SetQueryParam("spec.valuesFile", qSpecValuesFile); err != nil {
				return err
			}
		}
	}

	if o.StatusConditionStatus != nil {

		// query param status.conditionStatus
		var qrStatusConditionStatus string

		if o.StatusConditionStatus != nil {
			qrStatusConditionStatus = *o.StatusConditionStatus
		}
		qStatusConditionStatus := qrStatusConditionStatus
		if qStatusConditionStatus != "" {

			if err := r.SetQueryParam("status.conditionStatus", qStatusConditionStatus); err != nil {
				return err
			}
		}
	}

	if o.StatusConditionType != nil {

		// query param status.conditionType
		var qrStatusConditionType string

		if o.StatusConditionType != nil {
			qrStatusConditionType = *o.StatusConditionType
		}
		qStatusConditionType := qrStatusConditionType
		if qStatusConditionType != "" {

			if err := r.SetQueryParam("status.conditionType", qStatusConditionType); err != nil {
				return err
			}
		}
	}

	if o.StatusLastUpdated != nil {

		// query param status.lastUpdated
		var qrStatusLastUpdated strfmt.DateTime

		if o.StatusLastUpdated != nil {
			qrStatusLastUpdated = *o.StatusLastUpdated
		}
		qStatusLastUpdated := qrStatusLastUpdated.String()
		if qStatusLastUpdated != "" {

			if err := r.SetQueryParam("status.lastUpdated", qStatusLastUpdated); err != nil {
				return err
			}
		}
	}

	if o.StatusReason != nil {

		// query param status.reason
		var qrStatusReason string

		if o.StatusReason != nil {
			qrStatusReason = *o.StatusReason
		}
		qStatusReason := qrStatusReason
		if qStatusReason != "" {

			if err := r.SetQueryParam("status.reason", qStatusReason); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamOverrideGetOverride binds the parameter spec.clusterPlacement.nodeGroupingKeys
func (o *OverrideGetOverrideParams) bindParamSpecClusterPlacementNodeGroupingKeys(formats strfmt.Registry) []string {
	specClusterPlacementNodeGroupingKeysIR := o.SpecClusterPlacementNodeGroupingKeys

	var specClusterPlacementNodeGroupingKeysIC []string
	for _, specClusterPlacementNodeGroupingKeysIIR := range specClusterPlacementNodeGroupingKeysIR { // explode []string

		specClusterPlacementNodeGroupingKeysIIV := specClusterPlacementNodeGroupingKeysIIR // string as string
		specClusterPlacementNodeGroupingKeysIC = append(specClusterPlacementNodeGroupingKeysIC, specClusterPlacementNodeGroupingKeysIIV)
	}

	// items.CollectionFormat: "multi"
	specClusterPlacementNodeGroupingKeysIS := swag.JoinByFormat(specClusterPlacementNodeGroupingKeysIC, "multi")

	return specClusterPlacementNodeGroupingKeysIS
}
