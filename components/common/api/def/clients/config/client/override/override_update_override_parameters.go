// Code generated by go-swagger; DO NOT EDIT.

package override

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/config/models"
)

// NewOverrideUpdateOverrideParams creates a new OverrideUpdateOverrideParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewOverrideUpdateOverrideParams() *OverrideUpdateOverrideParams {
	return &OverrideUpdateOverrideParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewOverrideUpdateOverrideParamsWithTimeout creates a new OverrideUpdateOverrideParams object
// with the ability to set a timeout on a request.
func NewOverrideUpdateOverrideParamsWithTimeout(timeout time.Duration) *OverrideUpdateOverrideParams {
	return &OverrideUpdateOverrideParams{
		timeout: timeout,
	}
}

// NewOverrideUpdateOverrideParamsWithContext creates a new OverrideUpdateOverrideParams object
// with the ability to set a context for a request.
func NewOverrideUpdateOverrideParamsWithContext(ctx context.Context) *OverrideUpdateOverrideParams {
	return &OverrideUpdateOverrideParams{
		Context: ctx,
	}
}

// NewOverrideUpdateOverrideParamsWithHTTPClient creates a new OverrideUpdateOverrideParams object
// with the ability to set a custom HTTPClient for a request.
func NewOverrideUpdateOverrideParamsWithHTTPClient(client *http.Client) *OverrideUpdateOverrideParams {
	return &OverrideUpdateOverrideParams{
		HTTPClient: client,
	}
}

/* OverrideUpdateOverrideParams contains all the parameters to send to the API endpoint
   for the override update override operation.

   Typically these are written to a http.Request.
*/
type OverrideUpdateOverrideParams struct {

	// Body.
	Body *models.ConfigOverride

	/* MetadataName.

	   name of the resource
	*/
	MetadataName string

	/* MetadataProject.

	   Project of the resource
	*/
	MetadataProject string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the override update override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OverrideUpdateOverrideParams) WithDefaults() *OverrideUpdateOverrideParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the override update override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OverrideUpdateOverrideParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the override update override params
func (o *OverrideUpdateOverrideParams) WithTimeout(timeout time.Duration) *OverrideUpdateOverrideParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the override update override params
func (o *OverrideUpdateOverrideParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the override update override params
func (o *OverrideUpdateOverrideParams) WithContext(ctx context.Context) *OverrideUpdateOverrideParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the override update override params
func (o *OverrideUpdateOverrideParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the override update override params
func (o *OverrideUpdateOverrideParams) WithHTTPClient(client *http.Client) *OverrideUpdateOverrideParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the override update override params
func (o *OverrideUpdateOverrideParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the override update override params
func (o *OverrideUpdateOverrideParams) WithBody(body *models.ConfigOverride) *OverrideUpdateOverrideParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the override update override params
func (o *OverrideUpdateOverrideParams) SetBody(body *models.ConfigOverride) {
	o.Body = body
}

// WithMetadataName adds the metadataName to the override update override params
func (o *OverrideUpdateOverrideParams) WithMetadataName(metadataName string) *OverrideUpdateOverrideParams {
	o.SetMetadataName(metadataName)
	return o
}

// SetMetadataName adds the metadataName to the override update override params
func (o *OverrideUpdateOverrideParams) SetMetadataName(metadataName string) {
	o.MetadataName = metadataName
}

// WithMetadataProject adds the metadataProject to the override update override params
func (o *OverrideUpdateOverrideParams) WithMetadataProject(metadataProject string) *OverrideUpdateOverrideParams {
	o.SetMetadataProject(metadataProject)
	return o
}

// SetMetadataProject adds the metadataProject to the override update override params
func (o *OverrideUpdateOverrideParams) SetMetadataProject(metadataProject string) {
	o.MetadataProject = metadataProject
}

// WriteToRequest writes these params to a swagger request
func (o *OverrideUpdateOverrideParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param metadata.name
	if err := r.SetPathParam("metadata.name", o.MetadataName); err != nil {
		return err
	}

	// path param metadata.project
	if err := r.SetPathParam("metadata.project", o.MetadataProject); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
