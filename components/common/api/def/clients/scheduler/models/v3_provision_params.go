// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3ProvisionParams v3 provision params
//
// swagger:model v3ProvisionParams
type V3ProvisionParams struct {

	// EnvironmentProvider
	//
	// environment provider of the cluster
	EnvironmentProvider string `json:"environmentProvider,omitempty"`

	// KubernetesProvider
	//
	// kubernetes provider
	KubernetesProvider string `json:"kubernetesProvider,omitempty"`

	// ProvisionEnvironment
	//
	// provision environment
	ProvisionEnvironment string `json:"provisionEnvironment,omitempty"`

	// ProvisionPackageType
	//
	// provision package type
	ProvisionPackageType string `json:"provisionPackageType,omitempty"`

	// ProvisionType
	//
	// provision type
	ProvisionType string `json:"provisionType,omitempty"`

	// State
	//
	// state
	State string `json:"state,omitempty"`
}

// Validate validates this v3 provision params
func (m *V3ProvisionParams) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v3 provision params based on context it is used
func (m *V3ProvisionParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3ProvisionParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3ProvisionParams) UnmarshalBinary(b []byte) error {
	var res V3ProvisionParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
