// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3ClusterShareMode v3 cluster share mode
//
// swagger:model v3ClusterShareMode
type V3ClusterShareMode string

func NewV3ClusterShareMode(value V3ClusterShareMode) *V3ClusterShareMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V3ClusterShareMode.
func (m V3ClusterShareMode) Pointer() *V3ClusterShareMode {
	return &m
}

const (

	// V3ClusterShareModeClusterShareModeNotSet captures enum value "ClusterShareModeNotSet"
	V3ClusterShareModeClusterShareModeNotSet V3ClusterShareMode = "ClusterShareModeNotSet"

	// V3ClusterShareModeALL captures enum value "ALL"
	V3ClusterShareModeALL V3ClusterShareMode = "ALL"

	// V3ClusterShareModeCUSTOM captures enum value "CUSTOM"
	V3ClusterShareModeCUSTOM V3ClusterShareMode = "CUSTOM"
)

// for schema
var v3ClusterShareModeEnum []interface{}

func init() {
	var res []V3ClusterShareMode
	if err := json.Unmarshal([]byte(`["ClusterShareModeNotSet","ALL","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3ClusterShareModeEnum = append(v3ClusterShareModeEnum, v)
	}
}

func (m V3ClusterShareMode) validateV3ClusterShareModeEnum(path, location string, value V3ClusterShareMode) error {
	if err := validate.EnumCase(path, location, value, v3ClusterShareModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 cluster share mode
func (m V3ClusterShareMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3ClusterShareModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v3 cluster share mode based on context it is used
func (m V3ClusterShareMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
