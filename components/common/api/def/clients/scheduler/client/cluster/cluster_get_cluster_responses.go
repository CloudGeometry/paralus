// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/scheduler/models"
)

// ClusterGetClusterReader is a Reader for the ClusterGetCluster structure.
type ClusterGetClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterGetClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClusterGetClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewClusterGetClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClusterGetClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewClusterGetClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewClusterGetClusterOK creates a ClusterGetClusterOK with default headers values
func NewClusterGetClusterOK() *ClusterGetClusterOK {
	return &ClusterGetClusterOK{}
}

/* ClusterGetClusterOK describes a response with status code 200, with default header values.

A successful response.
*/
type ClusterGetClusterOK struct {
	Payload *models.V3Cluster
}

func (o *ClusterGetClusterOK) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterGetClusterOK  %+v", 200, o.Payload)
}
func (o *ClusterGetClusterOK) GetPayload() *models.V3Cluster {
	return o.Payload
}

func (o *ClusterGetClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClusterForbidden creates a ClusterGetClusterForbidden with default headers values
func NewClusterGetClusterForbidden() *ClusterGetClusterForbidden {
	return &ClusterGetClusterForbidden{}
}

/* ClusterGetClusterForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type ClusterGetClusterForbidden struct {
	Payload interface{}
}

func (o *ClusterGetClusterForbidden) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterGetClusterForbidden  %+v", 403, o.Payload)
}
func (o *ClusterGetClusterForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ClusterGetClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClusterNotFound creates a ClusterGetClusterNotFound with default headers values
func NewClusterGetClusterNotFound() *ClusterGetClusterNotFound {
	return &ClusterGetClusterNotFound{}
}

/* ClusterGetClusterNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type ClusterGetClusterNotFound struct {
	Payload string
}

func (o *ClusterGetClusterNotFound) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterGetClusterNotFound  %+v", 404, o.Payload)
}
func (o *ClusterGetClusterNotFound) GetPayload() string {
	return o.Payload
}

func (o *ClusterGetClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClusterDefault creates a ClusterGetClusterDefault with default headers values
func NewClusterGetClusterDefault(code int) *ClusterGetClusterDefault {
	return &ClusterGetClusterDefault{
		_statusCode: code,
	}
}

/* ClusterGetClusterDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ClusterGetClusterDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the cluster get cluster default response
func (o *ClusterGetClusterDefault) Code() int {
	return o._statusCode
}

func (o *ClusterGetClusterDefault) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] Cluster_GetCluster default  %+v", o._statusCode, o.Payload)
}
func (o *ClusterGetClusterDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ClusterGetClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
