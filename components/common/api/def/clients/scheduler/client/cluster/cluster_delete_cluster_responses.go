// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/scheduler/models"
)

// ClusterDeleteClusterReader is a Reader for the ClusterDeleteCluster structure.
type ClusterDeleteClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterDeleteClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClusterDeleteClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewClusterDeleteClusterNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewClusterDeleteClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClusterDeleteClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewClusterDeleteClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewClusterDeleteClusterOK creates a ClusterDeleteClusterOK with default headers values
func NewClusterDeleteClusterOK() *ClusterDeleteClusterOK {
	return &ClusterDeleteClusterOK{}
}

/* ClusterDeleteClusterOK describes a response with status code 200, with default header values.

A successful response.
*/
type ClusterDeleteClusterOK struct {
	Payload models.RPCDeleteClusterResponse
}

func (o *ClusterDeleteClusterOK) Error() string {
	return fmt.Sprintf("[DELETE /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterDeleteClusterOK  %+v", 200, o.Payload)
}
func (o *ClusterDeleteClusterOK) GetPayload() models.RPCDeleteClusterResponse {
	return o.Payload
}

func (o *ClusterDeleteClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDeleteClusterNoContent creates a ClusterDeleteClusterNoContent with default headers values
func NewClusterDeleteClusterNoContent() *ClusterDeleteClusterNoContent {
	return &ClusterDeleteClusterNoContent{}
}

/* ClusterDeleteClusterNoContent describes a response with status code 204, with default header values.

Returned when project is deleted successfully.
*/
type ClusterDeleteClusterNoContent struct {
	Payload interface{}
}

func (o *ClusterDeleteClusterNoContent) Error() string {
	return fmt.Sprintf("[DELETE /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterDeleteClusterNoContent  %+v", 204, o.Payload)
}
func (o *ClusterDeleteClusterNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ClusterDeleteClusterNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDeleteClusterForbidden creates a ClusterDeleteClusterForbidden with default headers values
func NewClusterDeleteClusterForbidden() *ClusterDeleteClusterForbidden {
	return &ClusterDeleteClusterForbidden{}
}

/* ClusterDeleteClusterForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type ClusterDeleteClusterForbidden struct {
	Payload interface{}
}

func (o *ClusterDeleteClusterForbidden) Error() string {
	return fmt.Sprintf("[DELETE /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterDeleteClusterForbidden  %+v", 403, o.Payload)
}
func (o *ClusterDeleteClusterForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ClusterDeleteClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDeleteClusterNotFound creates a ClusterDeleteClusterNotFound with default headers values
func NewClusterDeleteClusterNotFound() *ClusterDeleteClusterNotFound {
	return &ClusterDeleteClusterNotFound{}
}

/* ClusterDeleteClusterNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type ClusterDeleteClusterNotFound struct {
	Payload string
}

func (o *ClusterDeleteClusterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] clusterDeleteClusterNotFound  %+v", 404, o.Payload)
}
func (o *ClusterDeleteClusterNotFound) GetPayload() string {
	return o.Payload
}

func (o *ClusterDeleteClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDeleteClusterDefault creates a ClusterDeleteClusterDefault with default headers values
func NewClusterDeleteClusterDefault(code int) *ClusterDeleteClusterDefault {
	return &ClusterDeleteClusterDefault{
		_statusCode: code,
	}
}

/* ClusterDeleteClusterDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ClusterDeleteClusterDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the cluster delete cluster default response
func (o *ClusterDeleteClusterDefault) Code() int {
	return o._statusCode
}

func (o *ClusterDeleteClusterDefault) Error() string {
	return fmt.Sprintf("[DELETE /infra/v3/project/{metadata.project}/cluster/{metadata.name}][%d] Cluster_DeleteCluster default  %+v", o._statusCode, o.Payload)
}
func (o *ClusterDeleteClusterDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ClusterDeleteClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
