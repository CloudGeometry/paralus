// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/scheduler/models"
)

// ClusterDownloadClusterReader is a Reader for the ClusterDownloadCluster structure.
type ClusterDownloadClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterDownloadClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClusterDownloadClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewClusterDownloadClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClusterDownloadClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewClusterDownloadClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewClusterDownloadClusterOK creates a ClusterDownloadClusterOK with default headers values
func NewClusterDownloadClusterOK() *ClusterDownloadClusterOK {
	return &ClusterDownloadClusterOK{}
}

/* ClusterDownloadClusterOK describes a response with status code 200, with default header values.

A successful response.
*/
type ClusterDownloadClusterOK struct {
	Payload *models.V3HTTPBody
}

func (o *ClusterDownloadClusterOK) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}/download][%d] clusterDownloadClusterOK  %+v", 200, o.Payload)
}
func (o *ClusterDownloadClusterOK) GetPayload() *models.V3HTTPBody {
	return o.Payload
}

func (o *ClusterDownloadClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3HTTPBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDownloadClusterForbidden creates a ClusterDownloadClusterForbidden with default headers values
func NewClusterDownloadClusterForbidden() *ClusterDownloadClusterForbidden {
	return &ClusterDownloadClusterForbidden{}
}

/* ClusterDownloadClusterForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type ClusterDownloadClusterForbidden struct {
	Payload interface{}
}

func (o *ClusterDownloadClusterForbidden) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}/download][%d] clusterDownloadClusterForbidden  %+v", 403, o.Payload)
}
func (o *ClusterDownloadClusterForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ClusterDownloadClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDownloadClusterNotFound creates a ClusterDownloadClusterNotFound with default headers values
func NewClusterDownloadClusterNotFound() *ClusterDownloadClusterNotFound {
	return &ClusterDownloadClusterNotFound{}
}

/* ClusterDownloadClusterNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type ClusterDownloadClusterNotFound struct {
	Payload string
}

func (o *ClusterDownloadClusterNotFound) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}/download][%d] clusterDownloadClusterNotFound  %+v", 404, o.Payload)
}
func (o *ClusterDownloadClusterNotFound) GetPayload() string {
	return o.Payload
}

func (o *ClusterDownloadClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterDownloadClusterDefault creates a ClusterDownloadClusterDefault with default headers values
func NewClusterDownloadClusterDefault(code int) *ClusterDownloadClusterDefault {
	return &ClusterDownloadClusterDefault{
		_statusCode: code,
	}
}

/* ClusterDownloadClusterDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ClusterDownloadClusterDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the cluster download cluster default response
func (o *ClusterDownloadClusterDefault) Code() int {
	return o._statusCode
}

func (o *ClusterDownloadClusterDefault) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{metadata.project}/cluster/{metadata.name}/download][%d] Cluster_DownloadCluster default  %+v", o._statusCode, o.Payload)
}
func (o *ClusterDownloadClusterDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ClusterDownloadClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
