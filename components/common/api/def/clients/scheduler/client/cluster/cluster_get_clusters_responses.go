// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RafaySystems/rcloud-base/components/common/api/def/clients/scheduler/models"
)

// ClusterGetClustersReader is a Reader for the ClusterGetClusters structure.
type ClusterGetClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClusterGetClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewClusterGetClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewClusterGetClustersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewClusterGetClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewClusterGetClustersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewClusterGetClustersOK creates a ClusterGetClustersOK with default headers values
func NewClusterGetClustersOK() *ClusterGetClustersOK {
	return &ClusterGetClustersOK{}
}

/* ClusterGetClustersOK describes a response with status code 200, with default header values.

A successful response.
*/
type ClusterGetClustersOK struct {
	Payload *models.V3ClusterList
}

func (o *ClusterGetClustersOK) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{projectID}/cluster][%d] clusterGetClustersOK  %+v", 200, o.Payload)
}
func (o *ClusterGetClustersOK) GetPayload() *models.V3ClusterList {
	return o.Payload
}

func (o *ClusterGetClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V3ClusterList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClustersForbidden creates a ClusterGetClustersForbidden with default headers values
func NewClusterGetClustersForbidden() *ClusterGetClustersForbidden {
	return &ClusterGetClustersForbidden{}
}

/* ClusterGetClustersForbidden describes a response with status code 403, with default header values.

Returned when the user does not have permission to access the resource.
*/
type ClusterGetClustersForbidden struct {
	Payload interface{}
}

func (o *ClusterGetClustersForbidden) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{projectID}/cluster][%d] clusterGetClustersForbidden  %+v", 403, o.Payload)
}
func (o *ClusterGetClustersForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ClusterGetClustersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClustersNotFound creates a ClusterGetClustersNotFound with default headers values
func NewClusterGetClustersNotFound() *ClusterGetClustersNotFound {
	return &ClusterGetClustersNotFound{}
}

/* ClusterGetClustersNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type ClusterGetClustersNotFound struct {
	Payload string
}

func (o *ClusterGetClustersNotFound) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{projectID}/cluster][%d] clusterGetClustersNotFound  %+v", 404, o.Payload)
}
func (o *ClusterGetClustersNotFound) GetPayload() string {
	return o.Payload
}

func (o *ClusterGetClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClusterGetClustersDefault creates a ClusterGetClustersDefault with default headers values
func NewClusterGetClustersDefault(code int) *ClusterGetClustersDefault {
	return &ClusterGetClustersDefault{
		_statusCode: code,
	}
}

/* ClusterGetClustersDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ClusterGetClustersDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the cluster get clusters default response
func (o *ClusterGetClustersDefault) Code() int {
	return o._statusCode
}

func (o *ClusterGetClustersDefault) Error() string {
	return fmt.Sprintf("[GET /infra/v3/project/{projectID}/cluster][%d] Cluster_GetClusters default  %+v", o._statusCode, o.Payload)
}
func (o *ClusterGetClustersDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ClusterGetClustersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
